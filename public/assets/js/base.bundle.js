/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/src/js/base.js":
/*!*****************************************!*\
  !*** ./resources/assets/src/js/base.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("window.BaseApp = __webpack_require__(/*! ./base/BaseApp.js */ \"./resources/assets/src/js/base/BaseApp.js\");\nwindow.BaseUtil = __webpack_require__(/*! ./base/BaseUtil.js */ \"./resources/assets/src/js/base/BaseUtil.js\");\nwindow.BasePlugin = __webpack_require__(/*! ./base/BasePlugin.js */ \"./resources/assets/src/js/base/BasePlugin.js\");\nwindow.BaseContent = __webpack_require__(/*! ./base/BaseContent.js */ \"./resources/assets/src/js/base/BaseContent.js\");\nwindow.BaseModal = __webpack_require__(/*! ./base/BaseModal.js */ \"./resources/assets/src/js/base/BaseModal.js\");\nwindow.BaseList = __webpack_require__(/*! ./base/BaseList.js */ \"./resources/assets/src/js/base/BaseList.js\");\nwindow.BaseForm = __webpack_require__(/*! ./base/BaseForm.js */ \"./resources/assets/src/js/base/BaseForm.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL3NyYy9qcy9iYXNlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLG1CQUFPLENBQUMsb0VBQUQsQ0FBeEI7QUFDQUYsTUFBTSxDQUFDRyxRQUFQLEdBQWtCRCxtQkFBTyxDQUFDLHNFQUFELENBQXpCO0FBQ0FGLE1BQU0sQ0FBQ0ksVUFBUCxHQUFvQkYsbUJBQU8sQ0FBQywwRUFBRCxDQUEzQjtBQUNBRixNQUFNLENBQUNLLFdBQVAsR0FBcUJILG1CQUFPLENBQUMsNEVBQUQsQ0FBNUI7QUFDQUYsTUFBTSxDQUFDTSxTQUFQLEdBQW1CSixtQkFBTyxDQUFDLHdFQUFELENBQTFCO0FBQ0FGLE1BQU0sQ0FBQ08sUUFBUCxHQUFrQkwsbUJBQU8sQ0FBQyxzRUFBRCxDQUF6QjtBQUNBRixNQUFNLENBQUNRLFFBQVAsR0FBa0JOLG1CQUFPLENBQUMsc0VBQUQsQ0FBekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL3NyYy9qcy9iYXNlLmpzPzlkNWIiXSwic291cmNlc0NvbnRlbnQiOlsid2luZG93LkJhc2VBcHAgPSByZXF1aXJlKCcuL2Jhc2UvQmFzZUFwcC5qcycpO1xyXG53aW5kb3cuQmFzZVV0aWwgPSByZXF1aXJlKCcuL2Jhc2UvQmFzZVV0aWwuanMnKTtcclxud2luZG93LkJhc2VQbHVnaW4gPSByZXF1aXJlKCcuL2Jhc2UvQmFzZVBsdWdpbi5qcycpO1xyXG53aW5kb3cuQmFzZUNvbnRlbnQgPSByZXF1aXJlKCcuL2Jhc2UvQmFzZUNvbnRlbnQuanMnKTtcclxud2luZG93LkJhc2VNb2RhbCA9IHJlcXVpcmUoJy4vYmFzZS9CYXNlTW9kYWwuanMnKTtcclxud2luZG93LkJhc2VMaXN0ID0gcmVxdWlyZSgnLi9iYXNlL0Jhc2VMaXN0LmpzJyk7XHJcbndpbmRvdy5CYXNlRm9ybSA9IHJlcXVpcmUoJy4vYmFzZS9CYXNlRm9ybS5qcycpOyJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJCYXNlQXBwIiwicmVxdWlyZSIsIkJhc2VVdGlsIiwiQmFzZVBsdWdpbiIsIkJhc2VDb250ZW50IiwiQmFzZU1vZGFsIiwiQmFzZUxpc3QiLCJCYXNlRm9ybSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base.js\n");

/***/ }),

/***/ "./resources/assets/src/js/base/BaseApp.js":
/*!*************************************************!*\
  !*** ./resources/assets/src/js/base/BaseApp.js ***!
  \*************************************************/
/***/ ((module) => {

eval("var BaseApp = function () {\n  return {\n    init: function init() {\n      BaseApp.initToken();\n      BaseUtil.init();\n      BaseList.init();\n      BasePlugin.init();\n      BaseContent.init();\n    },\n    documentEvent: function documentEvent() {\n      BaseUtil.documentEvent();\n      BaseContent.documentEvent();\n      BaseModal.documentEvent();\n      BaseForm.documentEvent();\n      BaseList.documentEvent();\n    },\n    lang: function lang(key) {\n      var lang = BaseAppLang;\n      var keys = key.split('.');\n      $.each(keys, function (i, val) {\n        lang = lang[val];\n      });\n      return lang;\n    },\n    initToken: function initToken() {\n      window.BaseToken = new Date().getTime();\n    }\n  };\n}(); // webpack support\n\n\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = BaseApp;\n}\n\n$(function () {\n  BaseApp.init();\n  BaseApp.documentEvent();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL3NyYy9qcy9iYXNlL0Jhc2VBcHAuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBTUEsT0FBTyxHQUFHLFlBQVk7RUFDeEIsT0FBTztJQUNIQyxJQUFJLEVBQUUsZ0JBQVk7TUFDZEQsT0FBTyxDQUFDRSxTQUFSO01BQ0FDLFFBQVEsQ0FBQ0YsSUFBVDtNQUNBRyxRQUFRLENBQUNILElBQVQ7TUFDQUksVUFBVSxDQUFDSixJQUFYO01BQ0FLLFdBQVcsQ0FBQ0wsSUFBWjtJQUNILENBUEU7SUFRSE0sYUFBYSxFQUFFLHlCQUFZO01BQ3ZCSixRQUFRLENBQUNJLGFBQVQ7TUFDQUQsV0FBVyxDQUFDQyxhQUFaO01BQ0FDLFNBQVMsQ0FBQ0QsYUFBVjtNQUNBRSxRQUFRLENBQUNGLGFBQVQ7TUFDQUgsUUFBUSxDQUFDRyxhQUFUO0lBQ0gsQ0FkRTtJQWVIRyxJQUFJLEVBQUUsY0FBU0MsR0FBVCxFQUFjO01BQ2hCLElBQUlELElBQUksR0FBR0UsV0FBWDtNQUNBLElBQUlDLElBQUksR0FBR0YsR0FBRyxDQUFDRyxLQUFKLENBQVUsR0FBVixDQUFYO01BQ0FDLENBQUMsQ0FBQ0MsSUFBRixDQUFPSCxJQUFQLEVBQWEsVUFBVUksQ0FBVixFQUFhQyxHQUFiLEVBQWtCO1FBQzNCUixJQUFJLEdBQUdBLElBQUksQ0FBQ1EsR0FBRCxDQUFYO01BQ0gsQ0FGRDtNQUdBLE9BQU9SLElBQVA7SUFDSCxDQXRCRTtJQXVCSFIsU0FBUyxFQUFFLHFCQUFZO01BQ25CaUIsTUFBTSxDQUFDQyxTQUFQLEdBQW1CLElBQUlDLElBQUosR0FBV0MsT0FBWCxFQUFuQjtJQUNIO0VBekJFLENBQVA7QUEyQkgsQ0E1QmUsRUFBaEIsQyxDQThCQTs7O0FBQ0EsSUFBSSxTQUFpQyxPQUFPQyxNQUFNLENBQUNDLE9BQWQsS0FBMEIsV0FBL0QsRUFBNEU7RUFDeEVELE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnhCLE9BQWpCO0FBQ0g7O0FBRURlLENBQUMsQ0FBQyxZQUFZO0VBQ1ZmLE9BQU8sQ0FBQ0MsSUFBUjtFQUNBRCxPQUFPLENBQUNPLGFBQVI7QUFDSCxDQUhBLENBQUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL3NyYy9qcy9iYXNlL0Jhc2VBcHAuanM/Njc1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBCYXNlQXBwID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIEJhc2VBcHAuaW5pdFRva2VuKCk7XHJcbiAgICAgICAgICAgIEJhc2VVdGlsLmluaXQoKTtcclxuICAgICAgICAgICAgQmFzZUxpc3QuaW5pdCgpO1xyXG4gICAgICAgICAgICBCYXNlUGx1Z2luLmluaXQoKTtcclxuICAgICAgICAgICAgQmFzZUNvbnRlbnQuaW5pdCgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZG9jdW1lbnRFdmVudDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBCYXNlVXRpbC5kb2N1bWVudEV2ZW50KCk7XHJcbiAgICAgICAgICAgIEJhc2VDb250ZW50LmRvY3VtZW50RXZlbnQoKTtcclxuICAgICAgICAgICAgQmFzZU1vZGFsLmRvY3VtZW50RXZlbnQoKTtcclxuICAgICAgICAgICAgQmFzZUZvcm0uZG9jdW1lbnRFdmVudCgpO1xyXG4gICAgICAgICAgICBCYXNlTGlzdC5kb2N1bWVudEV2ZW50KCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBsYW5nOiBmdW5jdGlvbihrZXkpIHtcclxuICAgICAgICAgICAgdmFyIGxhbmcgPSBCYXNlQXBwTGFuZztcclxuICAgICAgICAgICAgdmFyIGtleXMgPSBrZXkuc3BsaXQoJy4nKTtcclxuICAgICAgICAgICAgJC5lYWNoKGtleXMsIGZ1bmN0aW9uIChpLCB2YWwpIHtcclxuICAgICAgICAgICAgICAgIGxhbmcgPSBsYW5nW3ZhbF07XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICByZXR1cm4gbGFuZztcclxuICAgICAgICB9LFxyXG4gICAgICAgIGluaXRUb2tlbjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB3aW5kb3cuQmFzZVRva2VuID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XHJcbiAgICAgICAgfSxcclxuICAgIH1cclxufSgpO1xyXG5cclxuLy8gd2VicGFjayBzdXBwb3J0XHJcbmlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgbW9kdWxlLmV4cG9ydHMgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICBtb2R1bGUuZXhwb3J0cyA9IEJhc2VBcHA7XHJcbn1cclxuXHJcbiQoZnVuY3Rpb24gKCkge1xyXG4gICAgQmFzZUFwcC5pbml0KCk7XHJcbiAgICBCYXNlQXBwLmRvY3VtZW50RXZlbnQoKTtcclxufSk7XHJcbiJdLCJuYW1lcyI6WyJCYXNlQXBwIiwiaW5pdCIsImluaXRUb2tlbiIsIkJhc2VVdGlsIiwiQmFzZUxpc3QiLCJCYXNlUGx1Z2luIiwiQmFzZUNvbnRlbnQiLCJkb2N1bWVudEV2ZW50IiwiQmFzZU1vZGFsIiwiQmFzZUZvcm0iLCJsYW5nIiwia2V5IiwiQmFzZUFwcExhbmciLCJrZXlzIiwic3BsaXQiLCIkIiwiZWFjaCIsImkiLCJ2YWwiLCJ3aW5kb3ciLCJCYXNlVG9rZW4iLCJEYXRlIiwiZ2V0VGltZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base/BaseApp.js\n");

/***/ }),

/***/ "./resources/assets/src/js/base/BaseContent.js":
/*!*****************************************************!*\
  !*** ./resources/assets/src/js/base/BaseContent.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("/*\r\n * BASE CONTENT\r\n */\nvar BaseContent = function () {\n  return {\n    init: function init() {\n      this.handlePushStyles();\n    },\n    replace: function replace(element) {\n      var _el$attr;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var el = $(element);\n      var url = (_el$attr = el.attr('href')) !== null && _el$attr !== void 0 ? _el$attr : el.data('url');\n      BaseContent.replaceByUrl(url, options);\n    },\n    replaceByUrl: function replaceByUrl(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      options.url = url;\n      var useReplace = $('meta[name=\"replace\"]').attr('content');\n\n      if (useReplace && $.isFunction(window.history.pushState)) {\n        var contentLoading = setTimeout(function () {\n          BaseContent.loader(true, false);\n        }, 500);\n        $.ajax({\n          url: url,\n          dataType: 'html',\n          headers: {\n            'Base-Replace-Content': true\n          },\n          beforeSend: function beforeSend() {\n            BaseContent.clearBody();\n          },\n          success: function success(resp) {\n            clearTimeout(contentLoading);\n            BaseContent.handleContentPageState(resp, options);\n            BaseContent.handlePushStyles();\n            BaseContent.loader(false);\n          },\n          error: function error() {\n            clearTimeout(contentLoading);\n            BaseContent.loader(false);\n            BaseUtil.redirect(url);\n          }\n        });\n      } else {\n        var _window$RemoveCacheTi;\n\n        BaseContent.loader(true, false);\n        setTimeout(function () {\n          BaseUtil.redirect(url);\n        }, (_window$RemoveCacheTi = window.RemoveCacheTime) !== null && _window$RemoveCacheTi !== void 0 ? _window$RemoveCacheTi : 0);\n      }\n    },\n    clearBody: function clearBody() {\n      $('body>:not(.no-body-clear,#gritter-notice-wrapper,.swal-overlay,.phpdebugbar,.phpdebugbar-openhandler,.phpdebugbar-openhandler-overlay)').remove();\n    },\n    loader: function loader() {\n      var loading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var fullbackdrop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var body = $('body');\n\n      if (loading === true) {\n        if (!body.hasClass('content-loading')) {\n          body.addClass('content-loading');\n\n          if (fullbackdrop === true) {\n            body.addClass('full-backdrop');\n          }\n        }\n      } else {\n        body.removeClass('content-loading full-backdrop');\n      }\n    },\n    handlePushStyles: function handlePushStyles() {\n      $('head [data-content-page-style=\"true\"]').remove();\n      $('#content style').attr('data-content-page-style', true).appendTo('head');\n    },\n    handleContentPageState: function handleContentPageState(resp, options) {\n      if (resp.includes('$(document).on')) {\n        Swal.fire(\"Change $(document).on to $('.content-page') or $('.page')\");\n        return false;\n      }\n\n      $('#content').html(resp);\n      var dataContent = $('#content').find('.base-content--state').first();\n\n      if (dataContent.length) {\n        var state = {\n          title: dataContent.data('title') ? dataContent.data('title') : $('title').text,\n          url: dataContent.data('url') ? dataContent.data('url') : options.url\n        };\n        window.history.pushState(state, state.title, state.url);\n        document.title = state.title; // Refresh token\n\n        var token = dataContent.data('csrf-token');\n\n        if (token) {\n          $('meta[name=\"csrf-token\"]').attr('content', token);\n        } // Reload Plugins and component\n\n\n        BaseList.init();\n        BasePlugin.init();\n        BaseUtil.refreshComponent(); // Check Notification\n\n        var lastNotify = $('.base-notification-wrapper').data('last-user-notification');\n\n        if (dataContent.data('last-user-notification') != lastNotify) {\n          BaseUtil.userNotification();\n        } // Reload ModuleApp\n\n\n        ModuleApp.init();\n\n        if ($.isFunction(options.callback)) {\n          options.callback();\n        }\n\n        $('body,html').animate({\n          scrollTop: 0\n        }, 500);\n      } else {\n        $('#content').css('opacity', 0);\n        BaseUtil.redirect(options.url);\n      }\n    },\n    documentEvent: function documentEvent() {\n      $(document).on('click', '.base-content--replace', function (e) {\n        e.preventDefault();\n        BaseContent.replace(this);\n      });\n    }\n  };\n}(); // webpack support\n\n\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = BaseContent;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base/BaseContent.js\n");

/***/ }),

/***/ "./resources/assets/src/js/base/BaseForm.js":
/*!**************************************************!*\
  !*** ./resources/assets/src/js/base/BaseForm.js ***!
  \**************************************************/
/***/ ((module) => {

eval("/*\r\n * BASE FORM\r\n */\nvar BaseForm = function () {\n  return {\n    submit: function submit(form) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return function (options) {\n        var defaultOptions = {\n          btnSubmit: null,\n          btnBack: null,\n          loaderModal: true,\n          hideModal: true,\n          drawDataTable: true,\n          refreshSidebarBadge: true,\n          scrollTop: false,\n          swalSuccess: false,\n          swalError: false,\n          swalSuccessTimer: '3000',\n          swalSuccessButton: {},\n          swalErrorTimer: '',\n          swalErrorButton: 'OK',\n          redirectTo: false,\n          fullCallbackSuccess: false,\n          fullCallbackError: false,\n          callbackSuccess: function callbackSuccess(resp, form, options) {},\n          callbackError: function callbackError(resp, form, options) {}\n        },\n            options = $.extend(defaultOptions, options);\n        var formLoading = setTimeout(function () {\n          if (options.loaderModal && form.closest('.modal').length) {\n            BaseModal.loader('#' + form.closest('.modal').attr('id'), true);\n          } else {\n            BaseContent.loader(true);\n          }\n        }, 700);\n\n        if (options.btnSubmit !== null && options.btnSubmit.length) {\n          options.btnSubmit.prop('disabled', true).prepend('<i class=\"fas fa-spinner fa-spin btn-loader m-r-3\"></i> ');\n        }\n\n        form.ajaxSubmit({\n          success: function success(resp) {\n            clearTimeout(formLoading);\n\n            if (options.fullCallbackSuccess === true) {\n              if ($.isFunction(options.callbackSuccess)) {\n                options.callbackSuccess(resp, form, options);\n              }\n            } else {\n              BaseForm.validationMessages(resp, form);\n              $.gritter.add({\n                title: resp.title != undefined ? resp.title : 'Success!',\n                text: resp.message != undefined ? resp.message : 'Data saved successfull!',\n                image: BaseUtil.getUrl('assets/media/ui/check.png'),\n                sticky: false,\n                time: '3000'\n              });\n              BaseForm.defaultCallbackSuccess(resp, form, options);\n            }\n          },\n          error: function error(resp) {\n            clearTimeout(formLoading);\n\n            if (options.fullCallbackError === true) {\n              if ($.isFunction(options.callbackError)) {\n                options.callbackError(resp, form, options);\n              }\n            } else {\n              resp = resp.responseJSON;\n              BaseForm.validationMessages(resp, form);\n              BaseForm.defaultCallbackError(resp, form, options);\n\n              if (resp.alert !== undefined) {\n                form.find('.base-alert').remove();\n                form.prepend(\"\\n                                <div class=\\\"alert alert-\" + resp.alert + \" fade show base-alert\\\">\\n                                    <span class=\\\"close\\\" data-dismiss=\\\"alert\\\">\\xD7</span>\\n                                    \" + resp.message + \"\\n                                </div>\\n                            \").hide().fadeIn(700);\n              }\n\n              if (options.swalError) {\n                Swal.fire({\n                  title: resp.title != undefined ? resp.title : 'Failed!',\n                  text: resp.message != undefined ? resp.message : 'Data failed to save!',\n                  icon: 'error',\n                  timer: options.swalErrorTimer,\n                  confirmButtonText: options.swalErrorButton\n                });\n              } else {\n                $.gritter.add({\n                  title: resp.title != undefined ? resp.title : 'Failed!',\n                  text: resp.message != undefined ? resp.message : 'Data failed to save!',\n                  image: BaseUtil.getUrl('assets/media/ui/cross.png'),\n                  sticky: false,\n                  time: 3000\n                });\n              }\n            }\n          }\n        });\n      }(options);\n    },\n    validationMessages: function validationMessages(resp, form) {\n      form.find('.is-invalid').removeClass('is-invalid');\n      form.find('.is-invalid-message').remove();\n      form.find('.is-invalid-alert').remove();\n\n      if (resp.message == 'The given data was invalid.') {\n        if (BaseUtil.getLang() == 'id') {\n          resp.message = 'Data yang Anda masukkan tidak valid.';\n        }\n\n        $.each(resp.errors, function (name, messages) {\n          var names = name.split('.'),\n              name = names.reduce(function (all, item) {\n            all += name == 0 ? item : '[' + item + ']';\n            return all;\n          }),\n              field = form.find('[name^=\"' + names[0] + '[]\"], [name=\"' + name + '\"], [name=\"' + name + '[]\"]'),\n              parentGroup = field.closest('.parent-group').length ? field.closest('.parent-group') : field.closest('.form-group');\n          field.addClass('is-invalid');\n          field.closest('.bootstrap-select').addClass('is-invalid');\n          $.each(messages, function (i, message) {\n            parentGroup.append('<p class=\"is-invalid-message text-danger my-1\">' + message + '</p>');\n          });\n        });\n        $('.is-invalid-message').hide().fadeIn(500);\n      } else if (BaseUtil.isDev()) {\n        if (resp.exception !== undefined && resp.file !== undefined && resp.line !== undefined && resp.message !== undefined) {\n          BaseModal.render('body', {\n            modal_id: '#alert-modal',\n            modal_size: 'modal-lg',\n            modal_bg: 'bg-light-danger',\n            callback: function callback(options, modalLoadingTimer) {\n              clearTimeout(modalLoadingTimer);\n              $(options.modal_id + ' .modal-content').html(\"\\n                                <div class=\\\"modal-header\\\">\\n                                    <h4 class=\\\"modal-title\\\">Failed!</h4>\\n                                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">\\xD7</button>\\n                                </div>\\n                                <div class=\\\"modal-body py-5\\\">\\n                                    <div class=\\\"alert alert-danger\\\">\\n                                        Terjadi kesalahan!\\n                                        <p mt-5><small>*Pesan ini hanya akan ditampilkan pada masa development</small></p>\\n                                    </div>\\n                                    <div class=\\\"table-responsive\\\">\\n                                        <table class=\\\"table\\\">\\n                                            <tbody>\\n                                                <tr>\\n                                                    <td class=\\\"width-80\\\">File : </td>\\n                                                    <td>\" + resp.file + \"</td>\\n                                                </tr>\\n                                                <tr>\\n                                                    <td class=\\\"width-80\\\">Line : </td>\\n                                                    <td>\" + resp.line + \"</td>\\n                                                </tr>\\n                                                <tr>\\n                                                    <td class=\\\"width-80\\\">Message : </td>\\n                                                    <td>\" + resp.message + \"</td>\\n                                                </tr>\\n                                            </tbody>\\n                                        </table>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"modal-footer\\\">\\n                                    <a href=\\\"javascript:;\\\" class=\\\"btn btn-white\\\" data-dismiss=\\\"modal\\\">Close</a>\\n                                </div>\\n                            \");\n\n              if (!$(options.modal_id).hasClass('show')) {\n                $(options.modal_id).modal('show');\n                BaseModal.loader(options.modal_id, false);\n              }\n            }\n          });\n        } else if ($.type(resp.errors) === \"string\") {\n          var alerParent = form.find('.modal-body').length ? form.find('.modal-body').first() : form;\n          alerParent.prepend(\"\\n                        <div class=\\\"alert alert-danger fade show is-invalid-alert\\\">\\n                            <span class=\\\"close alert-dismiss\\\" data-dismiss=\\\"alert\\\">\\xD7</span>\\n                            \" + resp.errors + \"\\n                            <br/>\\n                            <p><small>*Pesan ini hanya akan ditampilkan pada masa development</small></p>\\n                        </div>\\n                    \").hide().fadeIn(700);\n        }\n      }\n    },\n    defaultCallbackSuccess: function defaultCallbackSuccess(resp, form) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (resp.redirectToModal) {\n        BaseModal.render(options.btnSubmit, {\n          modal_id: '#modal-submit',\n          modal_size: 'modal-md',\n          modal_position: 'default',\n          modal_url: resp.redirectToModal\n        });\n        BaseContent.loader(false);\n        options.btnSubmit.prop('disabled', false).find('.btn-loader').remove();\n        return false;\n      }\n\n      if (resp.redirect) {\n        BaseContent.replaceByUrl(resp.redirect);\n        return false;\n      }\n\n      if (resp.redirectTo) {\n        BaseUtil.redirect(resp.redirectTo);\n        return false;\n      }\n\n      if (options.btnBack !== null && $(options.btnBack).length) {\n        BaseContent.replace(options.btnBack);\n        return false;\n      }\n\n      if (options.btnSubmit !== null && options.btnSubmit.length) {\n        options.btnSubmit.prop('disabled', false).find('.btn-loader').remove();\n      }\n\n      if (options.loaderModal && form.closest('.modal').length) {\n        BaseModal.loader('#' + form.closest('.modal').attr('id'), false);\n      } else {\n        BaseContent.loader(false);\n      }\n\n      if (options.hideModal && form.closest('.modal').length) {\n        form.closest('.modal').modal('hide');\n      }\n\n      if (options.drawDataTable) {\n        BaseList.draw();\n      }\n\n      if ($.isFunction(options.callbackSuccess)) {\n        options.callbackSuccess(resp, form, options);\n      }\n\n      if (options.scrollTop) {\n        $('body,html').animate({\n          scrollTop: '5px'\n        }, 500).animate({\n          scrollTop: 0\n        }, 800);\n      }\n    },\n    defaultCallbackError: function defaultCallbackError(resp, form) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (options.btnSubmit !== null && options.btnSubmit.length) {\n        options.btnSubmit.prop('disabled', false).find('.btn-loader').remove();\n      }\n\n      if (options.loaderModal && form.closest('.modal').length) {\n        BaseModal.loader('#' + form.closest('.modal').attr('id'), false);\n      } else {\n        BaseContent.loader(false);\n      }\n\n      if ($.isFunction(options.callbackError)) {\n        options.callbackError(resp, form);\n      }\n\n      var firstError = form.find('.is-invalid').first();\n\n      if (firstError.length && form.closest('.modal').length == 0) {\n        $('body,html').animate({\n          scrollTop: firstError.position().top\n        }, 500);\n      }\n    },\n    \"delete\": function _delete(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return function (options) {\n        var defaultOptions = {\n          swalSuccess: false,\n          swalError: false\n        },\n            options = $.extend(defaultOptions, options);\n        var contentLoading = setTimeout(function () {\n          BaseContent.loader(true);\n        }, 700);\n        $.ajax({\n          url: url,\n          method: 'POST',\n          data: {\n            _token: BaseUtil.getToken(),\n            _method: 'DELETE'\n          },\n          success: function success(resp) {\n            clearTimeout(contentLoading);\n            BaseContent.loader(false);\n\n            if (options.swalSuccess) {\n              Swal.fire({\n                title: resp.title != undefined ? resp.title : 'Success!',\n                text: resp.message != undefined ? resp.message : 'Data deleted successfully!',\n                icon: 'success',\n                timer: 3000\n              });\n            } else {\n              $.gritter.add({\n                title: resp.title != undefined ? resp.title : 'Success!',\n                text: resp.message != undefined ? resp.message : 'Data deleted successfully!',\n                image: BaseUtil.getUrl('assets/media/ui/check.png'),\n                sticky: false,\n                time: '3000'\n              });\n            }\n\n            BaseList.draw();\n          },\n          error: function error(resp) {\n            clearTimeout(contentLoading);\n            BaseContent.loader(false);\n\n            if (options.swalError) {\n              Swal.fire({\n                title: resp.title != undefined ? resp.title : 'Failed!',\n                text: resp.message != undefined ? resp.message : 'Data failed to delete!',\n                icon: 'error' // timer: 3000,\n\n              });\n            } else {\n              $.gritter.add({\n                title: resp.title != undefined ? resp.title : 'Failed!',\n                text: resp.message != undefined ? resp.message : 'Data failed to delete!',\n                image: BaseUtil.getUrl('assets/media/ui/cross.png'),\n                sticky: false,\n                time: '3000'\n              });\n            }\n          }\n        });\n      }(options);\n    },\n    activate: function activate(url, status) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return function (options) {\n        var defaultOptions = {\n          swalSuccess: false,\n          swalError: false\n        },\n            options = $.extend(defaultOptions, options);\n        var contentLoading = setTimeout(function () {\n          BaseContent.loader(true);\n        }, 700);\n        $.ajax({\n          url: url,\n          method: 'POST',\n          data: {\n            _token: BaseUtil.getToken(),\n            _method: 'POST',\n            status: status == 1 ? 0 : 1\n          },\n          success: function success(resp) {\n            clearTimeout(contentLoading);\n            BaseContent.loader(false);\n\n            if (options.swalSuccess) {\n              Swal.fire({\n                title: resp.title != undefined ? resp.title : 'Success!',\n                text: resp.message != undefined ? resp.message : 'Data has been activated successfully!',\n                icon: 'success',\n                timer: 3000\n              });\n            } else {\n              $.gritter.add({\n                title: resp.title != undefined ? resp.title : 'Success!',\n                text: resp.message != undefined ? resp.message : 'Data has been activated successfully!',\n                image: BaseUtil.getUrl('assets/media/ui/check.png'),\n                sticky: false,\n                time: '3000'\n              });\n            }\n\n            BaseList.draw();\n            BaseUtil.sidebarBadge();\n          },\n          error: function error(resp) {\n            clearTimeout(contentLoading);\n            BaseContent.loader(false);\n\n            if (options.swalError) {\n              Swal.fire({\n                title: resp.title != undefined ? resp.title : 'Failed!',\n                text: resp.message != undefined ? resp.message : 'Data failed to activation!',\n                icon: 'error'\n              });\n            } else {\n              $.gritter.add({\n                title: resp.title != undefined ? resp.title : 'Failed!',\n                text: resp.message != undefined ? resp.message : 'Data failed to activation!',\n                image: BaseUtil.getUrl('assets/media/ui/cross.png'),\n                sticky: false,\n                time: '3000'\n              });\n            }\n          }\n        });\n      }(options);\n    },\n    saveTempFiles: function saveTempFiles(el, event) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      return function (el, options) {\n        var _el$data, _el$data2, _el$data3, _el$data4;\n\n        var el = $(el),\n            form = el.closest('form'),\n            files = event.target.files;\n        var defaultOptions = {\n          parentClass: (_el$data = el.data('container')) !== null && _el$data !== void 0 ? _el$data : 'form-group',\n          maxFile: (_el$data2 = el.data('max-file')) !== null && _el$data2 !== void 0 ? _el$data2 : 1,\n          //1:Singgle, 2,...:Multiple\n          maxSize: (_el$data3 = el.data('max-size')) !== null && _el$data3 !== void 0 ? _el$data3 : 5024,\n          //5mb\n          type: (_el$data4 = el.data('container')) !== null && _el$data4 !== void 0 ? _el$data4 : null,\n          callbackSuccess: false,\n          callbackError: false\n        },\n            options = $.extend(defaultOptions, options);\n        var parent = el.closest('.' + options.parentClass);\n\n        if (!parent.length) {\n          parent = el.closest('.custom-file').parent();\n        }\n\n        if (parent.find('.progress-container:not(.error-uploaded)').length >= options.maxFile || files.length > options.maxFile) {\n          Swal.fire({\n            icon: 'warning',\n            title: 'Opps',\n            text: 'Maximal File ' + options.maxFile,\n            showConfirmButton: false // timer: 1500\n\n          });\n          el.val(\"\");\n          el.parent().find('.custom-file-label').text('Choose file');\n          return false;\n        }\n\n        if (files.length) {\n          var filesTooBig = [];\n          $.each(files, function (index, file) {\n            if (file && file.size && Math.round(file.size / 1024) >= options.maxSize) {\n              filesTooBig.push(file);\n            }\n          });\n\n          if (filesTooBig.length) {\n            var showSize = function showSize(bytes) {\n              if (bytes === 0) {\n                return '0 Bytes';\n              } else {\n                var k = 1024;\n                var dm = 2;\n                var sizes = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n                var i = Math.floor(Math.log(bytes) / Math.log(k));\n                return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n              }\n            };\n\n            var fileNames = '<ul class=\"pl-20px text-left\">';\n            $.each(filesTooBig, function (index, file) {\n              fileNames = fileNames + '<li>' + file.name + ' (' + showSize(file.size / 1024) + ')' + ' </li>';\n            });\n            fileNames = fileNames + '</ul>';\n            Swal.fire({\n              icon: 'warning',\n              title: 'Opps',\n              html: 'Maximum File Size is ' + showSize(options.maxSize) + '<br>Please check file fize:' + fileNames,\n              confirmButtonText: 'OKE'\n            });\n\n            if (parent.find('.success-uploaded').length == 0) {\n              el.val(\"\");\n              parent.find('.custom-file-label').text('Choose file');\n            }\n          } else {\n            $.each(files, function (index, file) {\n              if (file && file.size) {\n                var fmData = new FormData();\n                var uniqueid = Math.floor(Math.random() * 26) + Date.now();\n                fmData.append('_token', BaseUtil.getToken());\n                fmData.append('file', file);\n                fmData.append('type', options.type ? options.type : null);\n                fmData.append('uniqueid', uniqueid);\n                parent.find('.custom-file-label').text(files.length + ' Files Attached');\n                $.ajax({\n                  url: BaseUtil.getUrl('ajax/saveTempFiles'),\n                  type: 'POST',\n                  data: fmData,\n                  contentType: false,\n                  processData: false,\n                  // async: false,\n                  beforeSend: function beforeSend(e) {\n                    parent.append(\"\\n                                        <div class=\\\"progress-container w-100\\\" data-uid=\\\"\" + uniqueid + \"\\\">\\n                                            <div class=\\\"progress uploading mt-2\\\">\\n                                                <div class=\\\"progress-bar bar-\" + uniqueid + \" progress-bar-striped progress-bar-animated\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"0\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 0%\\\">0%</div>\\n                                            </div>\\n                                        </div>\\n                                    \");\n                  },\n                  xhr: function xhr(resp) {\n                    var xhr = new window.XMLHttpRequest();\n                    xhr.upload.addEventListener(\"progress\", function (evt) {\n                      if (evt.lengthComputable) {\n                        var percentComplete = parseInt(evt.loaded / evt.total * 100);\n                        form.find('button[type=\"submit\"]').attr('disabled', 'disabled');\n                        form.find('.progress-bar.bar-' + uniqueid).attr('aria-valuenow', percentComplete).css('width', percentComplete + '%').text(percentComplete + '%');\n                      }\n                    }, false);\n                    return xhr;\n                  },\n                  success: function success(resp) {\n                    if ($.isFunction(options.callbackSuccess)) {\n                      options.callback(resp, el, uniqueid);\n                    }\n\n                    var icon = 'far fa-file-alt';\n\n                    if (resp.file.file_type == 'pdf') {\n                      icon = 'text-danger far fa-file-pdf';\n                    } else if (resp.file.file_type == 'xlsx') {\n                      icon = 'text-success far fa-file-excel';\n                    } else if (resp.file.file_type == 'jpg' || resp.file.file_type == 'png') {\n                      icon = 'text-warning far fa-file-image';\n                    } else if (resp.file.file_type == 'ppt') {\n                      icon = 'text-danger far fa-file-powerpoint';\n                    } else if (resp.file.file_type == 'docx') {\n                      icon = 'text-primary far fa-file-word';\n                    }\n\n                    parent.find('.uploaded').val(1);\n                    parent.find('.progress-container[data-uid=\"' + uniqueid + '\"]').prepend(\"\\n                                            <div class=\\\"alert alert-custom alert-light fade show py-2 px-4 mb-0 mt-2 success-uploaded\\\" role=\\\"alert\\\">\\n                                                <div class=\\\"alert-icon\\\">\\n                                                    <i class=\\\"\" + icon + \"\\\"></i>\\n                                                </div>\\n                                                <div class=\\\"alert-text text-left\\\">\\n                                                    <input type=\\\"hidden\\\" name=\\\"\" + el.data('name') + \"[temp_files_ids][]\\\" value=\\\"\" + resp.file.id + \"\\\">\\n                                                    <div>Upload File:</div>\\n                                                    <a href=\\\"\" + resp.file.file_url + \"\\\" target=\\\"_blank\\\" class=\\\"text-primary\\\">\" + resp.file.file_name + \"</a>\\n                                                </div>\\n                                                <div class=\\\"alert-close\\\">\\n                                                    <button type=\\\"button\\\" class=\\\"close base-form--remove-temp-files\\\" data-toggle=\\\"tooltip\\\" title=\\\"Remove\\\">\\n                                                        <span aria-hidden=\\\"true\\\">\\n                                                            <i class=\\\"ki ki-close\\\"></i>\\n                                                        </span>\\n                                                    </button>\\n                                                </div>\\n                                            </div>\\n                                        \");\n                    parent.find('.progress-container[data-uid=\"' + uniqueid + '\"] .progress').removeClass('mt-2');\n                    form.find('button[type=\"submit\"]').removeAttr('disabled');\n                    form.find('.progress-bar.bar-' + uniqueid).removeClass('progress-bar-striped').text('Done'); // var myEvent = window.attachEvent || window.addEventListener;\n                    // var chkevent = window.attachEvent ? 'onbeforeunload' : 'beforeunload';\n                    // myEvent(chkevent, function (e) { // For >=IE7, Chrome, Firefox\n                    //     var confirmationMessage = 'Are you sure to leave the page?'; // a space\n                    //     (e || window.event).returnValue = confirmationMessage;\n                    //     return confirmationMessage;\n                    // });\n\n                    parent.find('.custom-file-label').text('Add file');\n                    BasePlugin.initTooltipPopover();\n\n                    if (parent.find('.progress-container').length >= options.maxFile || files.length > options.maxFile) {\n                      el.prop('disabled', true);\n                      parent.find('.custom-file-label').text('Uploaded');\n                    }\n                  },\n                  error: function error(resp) {\n                    parent.find('.progress-container[data-uid=\"' + uniqueid + '\"]').remove();\n                    parent.append(\"\\n                                            <div class=\\\"alert alert-custom alert-light-danger fade show py-2 px-4 my-2 error-uploaded\\\" role=\\\"alert\\\">\\n                                                <div class=\\\"alert-icon\\\">\\n                                                    <i class=\\\"flaticon-warning\\\"></i>\\n                                                </div>\\n                                                <div class=\\\"alert-text text-left\\\">Error Upload File: \" + file.name + \"</div>\\n                                                <div class=\\\"alert-text text-left\\\">\\n                                                    <div>Upload File:</div>\\n                                                    <a href=\\\"javascript:;\\\" class=\\\"text-primary\\\">\" + file.name + \"</a>\\n                                                </div>\\n                                                <div class=\\\"alert-close\\\">\\n                                                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                                                            <span aria-hidden=\\\"true\\\">\\n                                                                <i class=\\\"ki ki-close\\\"></i>\\n                                                            </span>\\n                                                        </button>\\n                                                </div>\\n                                            </div>\\n                                        \");\n                    form.find('button[type=\"submit\"]').removeAttr('disabled');\n                    form.find('.progress-bar.bar-' + uniqueid).removeClass('progress-bar-striped').text('Error');\n\n                    if (parent.find('.success-uploaded').length == 0) {\n                      parent.find('.uploaded').val('');\n                    }\n\n                    parent.find('.custom-file-label').text('Choose file');\n                  }\n                });\n              }\n            });\n          }\n        }\n      }(el, options);\n    },\n    removeTempFiles: function removeTempFiles(el) {\n      var me = $(el),\n          container = me.closest('.progress-container'),\n          parent = container.parent();\n      me.tooltip('hide');\n      container.remove();\n      parent.find('input[type=\"file\"]').val('').prop('disabled', false);\n      parent.find('.custom-file-label').text('Choose file');\n\n      if (parent.find('.success-uploaded').length == 0) {\n        parent.find('.uploaded').val('');\n      }\n\n      BasePlugin.initTooltipPopover();\n    },\n    approveByUrl: function approveByUrl(el) {\n      var _me$attr;\n\n      var me = $(el),\n          url = (_me$attr = me.attr('href')) !== null && _me$attr !== void 0 ? _me$attr : me.data('url');\n\n      if (url) {\n        Swal.fire({\n          title: BaseApp.lang('confirm.approve.title'),\n          text: BaseApp.lang('confirm.approve.text'),\n          icon: 'warning',\n          showCancelButton: true,\n          confirmButtonText: BaseApp.lang('confirm.approve.ok'),\n          cancelButtonText: BaseApp.lang('confirm.approve.cancel')\n        }).then(function (result) {\n          if (result.isConfirmed) {\n            var contentLoading = setTimeout(function () {\n              BaseContent.loader(true);\n            }, 500);\n            $.ajax({\n              type: \"POST\",\n              url: url,\n              data: {\n                _token: BaseUtil.getToken()\n              },\n              success: function success(resp) {\n                clearTimeout(contentLoading);\n                BaseContent.loader(false);\n                $.gritter.add({\n                  title: 'Success!',\n                  text: BaseApp.lang('success.approved'),\n                  image: BaseUtil.getUrl('assets/media/ui/check.png'),\n                  sticky: false,\n                  time: '3000'\n                });\n                BaseContent.replaceByUrl(resp.redirect);\n              },\n              error: function error(resp) {\n                resp = resp.responseJSON;\n                clearTimeout(contentLoading);\n                BaseContent.loader(false);\n                $.gritter.add({\n                  title: 'Failed!',\n                  text: BaseApp.lang('error.approved'),\n                  image: BaseUtil.getUrl('assets/media/ui/cross.png'),\n                  sticky: false,\n                  time: '3000'\n                });\n              }\n            });\n          }\n        });\n      }\n    },\n    postByUrl: function postByUrl(el) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return function (options) {\n        var _me$attr2, _me$data, _me$data2, _me$data3, _me$data4, _me$data5;\n\n        var me = $(el);\n        var defaultOptions = {\n          url: (_me$attr2 = me.attr('href')) !== null && _me$attr2 !== void 0 ? _me$attr2 : me.data('url'),\n          method: (_me$data = me.data('method')) !== null && _me$data !== void 0 ? _me$data : 'POST',\n          swalTitle: (_me$data2 = me.data('swal-title')) !== null && _me$data2 !== void 0 ? _me$data2 : BaseApp.lang('confirm.save.title'),\n          swalText: (_me$data3 = me.data('swal-text')) !== null && _me$data3 !== void 0 ? _me$data3 : BaseApp.lang('confirm.save.text'),\n          swalOk: (_me$data4 = me.data('swal-ok')) !== null && _me$data4 !== void 0 ? _me$data4 : BaseApp.lang('confirm.save.ok'),\n          swalCancel: (_me$data5 = me.data('swal-cancel')) !== null && _me$data5 !== void 0 ? _me$data5 : BaseApp.lang('confirm.save.cancel'),\n          data: {}\n        },\n            options = $.extend(defaultOptions, options);\n\n        if (options.url) {\n          Swal.fire({\n            title: options.swalTitle,\n            text: options.swalText,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: options.swalOk,\n            cancelButtonText: options.swalCancel\n          }).then(function (result) {\n            if (result.isConfirmed) {\n              var contentLoading = setTimeout(function () {\n                BaseContent.loader(true);\n              }, 500);\n              $.ajax({\n                type: 'POST',\n                url: options.url,\n                data: $.extend({\n                  _token: BaseUtil.getToken(),\n                  _method: options.method\n                }, options.data),\n                success: function success(resp) {\n                  var _resp$message;\n\n                  clearTimeout(contentLoading);\n                  BaseContent.loader(false);\n                  $.gritter.add({\n                    title: 'Success!',\n                    text: (_resp$message = resp.message) !== null && _resp$message !== void 0 ? _resp$message : BaseApp.lang('success.saved'),\n                    image: BaseUtil.getUrl('assets/media/ui/check.png'),\n                    sticky: false,\n                    time: '3000'\n                  });\n                  BaseContent.replaceByUrl(resp.redirect);\n                },\n                error: function error(resp) {\n                  var _resp$message2;\n\n                  resp = resp.responseJSON;\n                  clearTimeout(contentLoading);\n                  BaseContent.loader(false);\n                  $.gritter.add({\n                    title: 'Failed!',\n                    text: (_resp$message2 = resp.message) !== null && _resp$message2 !== void 0 ? _resp$message2 : BaseApp.lang('error.saved'),\n                    image: BaseUtil.getUrl('assets/media/ui/cross.png'),\n                    sticky: false,\n                    time: '3000'\n                  });\n                }\n              });\n            }\n          });\n        }\n      }(options);\n    },\n    documentEvent: function documentEvent() {\n      $(document).on('change', 'input.base-form--save-temp-files', function (e) {\n        BaseForm.saveTempFiles(this, e);\n      });\n      $(document).on('click', '.base-form--remove-temp-files', function (e) {\n        // e.preventDefault();\n        BaseForm.removeTempFiles(this);\n      });\n      $(document).on('click', '.base-form--approveByUrl', function (e) {\n        e.preventDefault();\n        BaseForm.approveByUrl(this);\n      });\n      $(document).on('click', '.base-form--postByUrl', function (e) {\n        e.preventDefault();\n        BaseForm.postByUrl(this);\n      });\n      $(document).on('click', '.base-form--submit-login', function (e) {\n        e.preventDefault();\n        var me = $(this),\n            form = me.closest('form');\n        BaseForm.submit(form, {\n          btnSubmit: me,\n          swalError: false,\n          fullCallbackSuccess: true,\n          callbackSuccess: function callbackSuccess(resp, form, options) {\n            BaseUtil.redirect('/');\n          }\n        });\n      });\n      $(document).on('click', '.base-form--submit-modal', function (e) {\n        var _me$data6, _me$data7, _me$data8, _me$data9, _me$data10;\n\n        e.preventDefault();\n        var me = $(this),\n            form = me.closest('form'),\n            swalConfirm = me.data('swal-confirm'),\n            swalTitle = (_me$data6 = me.data('swal-title')) !== null && _me$data6 !== void 0 ? _me$data6 : BaseApp.lang('confirm.save.title'),\n            swalText = (_me$data7 = me.data('swal-text')) !== null && _me$data7 !== void 0 ? _me$data7 : BaseApp.lang('confirm.save.text'),\n            swalOk = (_me$data8 = me.data('swal-ok')) !== null && _me$data8 !== void 0 ? _me$data8 : BaseApp.lang('confirm.save.ok'),\n            swalCancel = (_me$data9 = me.data('swal-cancel')) !== null && _me$data9 !== void 0 ? _me$data9 : BaseApp.lang('confirm.save.cancel');\n\n        if (form.find('[name=\"is_submit\"]').length == 0) {\n          form.append('<input type=\"hidden\" name=\"is_submit\" value=\"1\">');\n        }\n\n        form.find('[name=\"is_submit\"]').val((_me$data10 = me.data('submit')) !== null && _me$data10 !== void 0 ? _me$data10 : 1);\n\n        if (swalConfirm) {\n          Swal.fire({\n            title: swalTitle,\n            text: swalText,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: swalOk,\n            cancelButtonText: swalCancel\n          }).then(function (result) {\n            if (result.isConfirmed) {\n              BaseForm.submit(form, {\n                btnSubmit: me\n              });\n            }\n          });\n        } else {\n          BaseForm.submit(form, {\n            btnSubmit: me\n          });\n        }\n      });\n      $(document).on('click', '.base-form--submit-page', function (e) {\n        var _me$data11, _me$data12, _me$data13, _me$data14, _me$data15;\n\n        e.preventDefault();\n        var me = $(this),\n            form = me.closest('form'),\n            swalConfirm = me.data('swal-confirm'),\n            swalTitle = (_me$data11 = me.data('swal-title')) !== null && _me$data11 !== void 0 ? _me$data11 : BaseApp.lang('confirm.save.title'),\n            swalText = (_me$data12 = me.data('swal-text')) !== null && _me$data12 !== void 0 ? _me$data12 : BaseApp.lang('confirm.save.text'),\n            swalOk = (_me$data13 = me.data('swal-ok')) !== null && _me$data13 !== void 0 ? _me$data13 : BaseApp.lang('confirm.save.ok'),\n            swalCancel = (_me$data14 = me.data('swal-cancel')) !== null && _me$data14 !== void 0 ? _me$data14 : BaseApp.lang('confirm.save.cancel');\n\n        if (form.find('[name=\"is_submit\"]').length == 0) {\n          form.append('<input type=\"hidden\" name=\"is_submit\" value=\"1\">');\n        }\n\n        form.find('[name=\"is_submit\"]').val((_me$data15 = me.data('submit')) !== null && _me$data15 !== void 0 ? _me$data15 : 1);\n\n        if (swalConfirm !== false) {\n          Swal.fire({\n            title: swalTitle,\n            text: swalText,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: swalOk,\n            cancelButtonText: swalCancel\n          }).then(function (result) {\n            if (result.isConfirmed) {\n              BaseForm.submit(form, {\n                btnSubmit: me,\n                btnBack: form.find('.btn-back'),\n                loaderModal: false\n              });\n            }\n          });\n        } else {\n          BaseForm.submit(form, {\n            btnSubmit: me,\n            btnBack: form.find('.btn-back'),\n            loaderModal: false\n          });\n        }\n      });\n      $(document).on('click', '.base-modal--confirm', function (e) {\n        e.preventDefault();\n        BaseModal.confirm(this);\n      });\n      $(document).on('click', '.base-form--delete', function (e) {\n        e.preventDefault();\n        var me = $(this),\n            url = me.attr('href') ? me.attr('href') : me.data('url') ? me.data('url') : '';\n        me.closest('.modal').modal('hide');\n\n        if (url) {\n          BaseForm[\"delete\"](url);\n        }\n      });\n      $(document).on('click', '.base-form--activate', function (e) {\n        e.preventDefault();\n        var me = $(this),\n            status = $(this).data('status') == 1 ? 0 : 1,\n            text = status == 1 ? 'Are you sure you want to activate this data?' : 'Are you sure you want to inactivate this data?';\n        BaseModal.confirm(me, {\n          method: 'POST',\n          confirm_text: \"<input type=\\\"hidden\\\" name=\\\"status\\\" value=\\\"\" + status + \"\\\">\" + text\n        });\n      });\n      $(document).on('focus', 'form input, form textarea', function () {\n        var me = $(this),\n            fg = me.closest('.parent-group').length ? me.closest('.parent-group') : me.closest('.form-group');\n\n        if (fg.length) {\n          fg.find('.is-invalid').removeClass('is-invalid');\n          fg.find('.is-invalid-message').remove();\n          fg.find('.is-invalid-alert').remove();\n        }\n      });\n      $(document).on('change', 'select', function () {\n        var me = $(this),\n            fg = me.closest('.parent-group').length ? me.closest('.parent-group') : me.closest('.form-group');\n\n        if (fg.length) {\n          fg.find('.is-invalid').removeClass('is-invalid');\n          fg.find('.is-invalid-message').remove();\n          fg.find('.is-invalid-alert').remove();\n        }\n      });\n      $(document).on('change', '.custom-file input[type=\"file\"]:not(.base-form--save-temp-files)', function (e) {\n        if (e.target.files.length) {\n          $(this).next('.custom-file-label').html(e.target.files[0].name);\n        }\n      });\n    }\n  };\n}(); // webpack support\n\n\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = BaseForm;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base/BaseForm.js\n");

/***/ }),

/***/ "./resources/assets/src/js/base/BaseList.js":
/*!**************************************************!*\
  !*** ./resources/assets/src/js/base/BaseList.js ***!
  \**************************************************/
/***/ ((module) => {

eval("/**\r\n * ============================= BASE LIST ============================\r\n * return render(options), loader(modal_id, loading=true)\r\n */\nvar BaseList = function () {\n  \"use strict\";\n\n  return {\n    init: function init() {\n      var tables = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['#datatable_1', '#datatable_2', '#datatable_3'];\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.draw(tables, options);\n    },\n    draw: function draw() {\n      var tables = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['#datatable_1', '#datatable_2', '#datatable_3'];\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      $.each(tables, function (i, table_id) {\n        if ($(table_id).length) {\n          BaseList.render(table_id, options);\n        }\n      });\n    },\n    lang: function lang() {\n      if ($('html').attr('lang') == 'id') {\n        return {\n          \"sProcessing\": \"<div class=\\\"spinners\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"spinner-grow text-success\\\" role=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sr-only\\\">Loading...</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"spinner-grow text-danger\\\" role=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sr-only\\\">Loading...</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"spinner-grow text-warning\\\" role=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sr-only\\\">Loading...</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\",\n          \"sLengthMenu\": \"Menampilkan _MENU_ data per halaman\",\n          \"sZeroRecords\": \"Tidak ditemukan data yang sesuai\",\n          \"sInfo\": \"Menampilkan _START_ sampai _END_ dari _TOTAL_ data\",\n          \"sInfoEmpty\": \"Menampilkan 0 sampai 0 dari 0 data\",\n          \"sInfoFiltered\": \"(difilter dari _MAX_ keseluruhan data)\",\n          \"sInfoPostFix\": \"\",\n          \"sSearch\": \"Cari:\",\n          \"sUrl\": \"\",\n          \"oPaginate\": {\n            \"sFirst\": \"Pertama\",\n            \"sPrevious\": \"Sebelumnya\",\n            \"sNext\": \"Selanjutnya\",\n            \"sLast\": \"Terakhir\"\n          }\n        };\n      } else {\n        return {\n          \"sProcessing\": \"<div class=\\\"spinners\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"spinner-grow text-success\\\" role=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sr-only\\\">Loading...</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"spinner-grow text-danger\\\" role=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sr-only\\\">Loading...</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"spinner-grow text-warning\\\" role=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sr-only\\\">Loading...</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\",\n          \"sLengthMenu\": \"Display _MENU_ data per page\",\n          \"sZeroRecords\": \"Nothing found\",\n          \"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ data\",\n          \"sInfoEmpty\": \"No data available\",\n          \"sInfoFiltered\": \"(filtered from _MAX_ total data)\",\n          \"sInfoPostFix\": \"\",\n          \"sSearch\": \"Search:\",\n          \"sUrl\": \"\",\n          \"oPaginate\": {\n            \"sFirst\": \"First\",\n            \"sPrevious\": \"Previous\",\n            \"sNext\": \"Next\",\n            \"sLast\": \"End\"\n          }\n        };\n      }\n    },\n    render: function render(table_id) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return function (options) {\n        var el = $(table_id);\n        var defaultOptions = {\n          columns: [],\n          url: el.data('url'),\n          method: 'POST',\n          token: BaseUtil.getToken(),\n          callback: false,\n          tooltip: false\n        },\n            options = $.extend(defaultOptions, options);\n\n        if (el.length) {\n          if (!$.fn.DataTable.isDataTable(table_id)) {\n            $.each(el.find('thead th'), function (i) {\n              var th = $(this);\n              options.columns[i] = {\n                sName: th.data('columns-name'),\n                mData: th.data('columns-data'),\n                label: th.data('columns-label'),\n                bSortable: th.data('columns-sortable'),\n                sWidth: th.data('columns-width'),\n                sClass: th.data('columns-class-name')\n              };\n            });\n            el.DataTable({\n              lengthChange: false,\n              filter: false,\n              processing: true,\n              serverSide: true,\n              autoWidth: true,\n              sorting: [],\n              language: BaseList.lang(),\n              paging: el.data('paging') == false ? false : true,\n              info: el.data('info') == false ? false : true,\n              ajax: {\n                url: options.url,\n                method: options.method,\n                // beforeSend: function () {\n                // \tsetTimeout(function () {\n                // \t\tel.removeClass('hide');\n                // \t}, 500);\n                // },\n                data: function data(request) {\n                  request._token = options.token;\n                  $('#dataFilters input.filter-control, #dataFilters select.filter-control').each(function () {\n                    var name = $(this).data('post'),\n                        val = $(this).val();\n                    request[name] = val;\n                  });\n\n                  if (options.extraData !== undefined) {\n                    request['extraData'] = options.extraData;\n                  }\n                },\n                error: function error(responseError, status) {\n                  if (el.hasClass('first-render-has-error')) {\n                    console.log(responseError);\n                    return false;\n                  } else {\n                    el.addClass('first-render-has-error');\n                    el.DataTable().draw();\n                  }\n                }\n              },\n              columns: options.columns,\n              drawCallback: function drawCallback(resp) {\n                el.removeClass('hide');\n                this.api().column(0, {\n                  search: 'applied',\n                  order: 'applied'\n                }).nodes().each(function (cell, i, x, y) {\n                  if (parseInt(cell.innerHTML) + i + 1) {\n                    cell.innerHTML = parseInt(cell.innerHTML) + i + 1;\n                  }\n                });\n\n                if (el.data('badge') == true && el.data('tab-list') != undefined) {\n                  var tab_list = $('.tab-list[href=\"' + el.data('tab-list') + '\"]').first(),\n                      total_records = resp.json.recordsTotal;\n\n                  if (total_records && tab_list.length) {\n                    tab_list.find('.tab-badge').remove();\n                    tab_list.append(\"\\n\\t                    \\t\\t    \\t<span class=\\\"label label-success tab-badge ml-2  label-inline\\\">\" + total_records + \"</span>\\n\\t                    \\t\\t    \");\n                  }\n                }\n\n                el.find('td .btn, td .make-td-py-0').closest('td').addClass('py-0');\n\n                if ($.isFunction(options.callback)) {\n                  options.callback(options, resp);\n                }\n\n                BasePlugin.initTooltipPopover();\n              }\n            });\n\n            if (BaseUtil.isDev() === false) {\n              $.fn.dataTable.ext.errMode = 'none';\n              el.on('error.dt', function (e, settings, techNote, message) {\n                console.log('An error has been reported by DataTables: ', message);\n              }).DataTable();\n            }\n          } else {\n            el.DataTable().draw();\n          }\n        }\n      }(options);\n    },\n    handleDataFilters: function handleDataFilters() {\n      var isFiltered = false;\n      $.each($('.filter-control'), function () {\n        if ($(this).val()) {\n          isFiltered = true;\n          return false;\n        }\n      });\n\n      if (isFiltered) {\n        $('#dataFilters .label-filter').addClass('hide');\n        $('#dataFilters .reset-filter').removeClass('hide');\n      } else {\n        $('#dataFilters .reset-filter').addClass('hide');\n        $('#dataFilters .label-filter').removeClass('hide');\n      }\n    },\n    documentEvent: function documentEvent() {\n      var filterTimer;\n      $(document).on('keyup', '#dataFilters input.filter-control', function (e) {\n        clearTimeout(filterTimer);\n        filterTimer = setTimeout(function () {\n          BaseList.draw();\n        }, 500);\n        BaseList.handleDataFilters();\n      });\n      $(document).on('change', '#dataFilters select.filter-control, #dataFilters input.filter-control[class*=date]', function (e) {\n        BaseList.draw();\n        BaseList.handleDataFilters();\n      });\n      $(document).on('click', '#dataFilters .filter.button', function (e) {\n        e.preventDefault();\n        BaseList.draw();\n      });\n      $(document).on('click', '#dataFilters .reset.button', function (e) {\n        $('#dataFilters .filter-control').val('');\n        $('#dataFilters .reset-filter').addClass('hide');\n        $('#dataFilters .label-filter').removeClass('hide');\n        BasePlugin.init();\n        BaseList.draw();\n      });\n      $(document).on('click', '.tab-list', function () {\n        var me = $(this);\n        var colors = ['primary', 'info', 'success', 'warning', 'danger'];\n        $.each(colors, function (i, color) {\n          if (me.hasClass('nav-link-' + color)) {\n            me.closest('.nav-tabs').addClass('nav-tabs-' + color);\n          } else {\n            me.closest('.nav-tabs').removeClass('nav-tabs-' + color);\n          }\n        });\n      });\n      $(document).on('shown.bs.dropdown', 'table.is-datatable', function (e) {\n        // The .dropdown container\n        var me = $(e.target); // Find the actual .dropdown-menu\n\n        var dropdown = me.find('.dropdown-menu');\n\n        if (dropdown.length) {\n          // Save a reference to it, so we can find it after we've attached it to the body\n          me.data('dropdown-menu', dropdown);\n        } else {\n          dropdown = me.data('dropdown-menu');\n        }\n\n        dropdown.css('top', me.offset().top + me.outerHeight() + 'px');\n        dropdown.css('left', me.offset().left + 'px');\n        dropdown.css('position', 'absolute');\n        dropdown.css('display', 'block');\n        dropdown.appendTo('#content-page');\n      });\n      $(document).on('hide.bs.dropdown', 'table.is-datatable', function (e) {\n        // Hide the dropdown menu bound to this button\n        $(e.target).data('dropdown-menu').css('display', 'none');\n      });\n    }\n  };\n}(); // webpack support\n\n\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = BaseList;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base/BaseList.js\n");

/***/ }),

/***/ "./resources/assets/src/js/base/BaseModal.js":
/*!***************************************************!*\
  !*** ./resources/assets/src/js/base/BaseModal.js ***!
  \***************************************************/
/***/ ((module) => {

eval("/**\r\n * ============================= BASE MODAL ============================\r\n * return render(options), loader(modal_id, loading=true)\r\n */\nvar BaseModal = function () {\n  return {\n    render: function render(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return function (options) {\n        var _el$data, _el$data2;\n\n        var el = $(element);\n        var defaultOptions = {\n          modal_id: (_el$data = el.data('modal-id')) !== null && _el$data !== void 0 ? _el$data : '#modal',\n          modal_position: (_el$data2 = el.data('modal-position')) !== null && _el$data2 !== void 0 ? _el$data2 : 'modal-dialog-centered modal-dialog-right-bottom',\n          modal_size: el.data('modal-size') ? el.data('modal-size') : 'modal-md',\n          modal_bg: el.data('modal-bg') ? el.data('modal-bg') : '',\n          modal_timer: el.data('modal-timer') ? el.data('modal-timer') : 500,\n          modal_parent: el.data('modal-parent') ? el.data('modal-parent') : '#content',\n          modal_backdrop: el.data('modal-backdrop') ? el.data('modal-backdrop') : 'static',\n          modal_keyboard: el.data('modal-keyboard') ? el.data('modal-keyboard') : false,\n          modal_ajax: el.data('modal-ajax') == false ? false : true,\n          modal_url: el.attr('href') ? el.attr('href') : el.data('modal-url') ? el.data('modal-url') : '',\n          callback: false\n        },\n            options = $.extend(defaultOptions, options);\n        $(options.modal_id).remove();\n\n        if ($(options.modal_parent).length == 0) {\n          options.modal_parent = 'body';\n        }\n\n        $(options.modal_parent).append(\"\\n\\t\\t\\t\\t<div class=\\\"modal fade modal-loading content-page\\\" \\n\\t\\t\\t\\t\\tid=\\\"\" + options.modal_id.replace('#', '') + \"\\\" \\n\\t\\t\\t\\t\\tdata-keyboard=\\\"\" + options.modal_keyboard + \"\\\" \\n\\t\\t\\t\\t\\tdata-backdrop=\\\"\" + options.modal_backdrop + \"\\\" >\\n\\t\\t\\t\\t\\t<div class=\\\"modal-dialog \" + options.modal_size + \" \" + options.modal_position + \"\\\" data-module-name=\\\"\" + ModuleApp.getName() + \"\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"modal-content \" + options.modal_bg + \"\\\"></div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\");\n        var modalLoadingTimer = setTimeout(function () {\n          $(options.modal_id).modal('show');\n          BaseModal.loader(options.modal_id, true);\n        }, options.modal_timer);\n\n        if (options.modal_ajax !== false && options.modal_url !== '') {\n          BaseModal.handleByAjax(options, modalLoadingTimer);\n        } else {\n          if ($.isFunction(options.callback)) {\n            options.callback(options, modalLoadingTimer);\n          }\n        }\n      }(options);\n    },\n    loader: function loader() {\n      var modal_id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '#modal';\n      var loading = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if ($(modal_id).length) {\n        if ($(modal_id + ' .modal-loader').length == 0) {\n          $(modal_id + ' .modal-content').append(\"\\n\\t\\t\\t\\t\\t\\t<div class=\\\"modal-loader pt-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"spinner spinner-primary\\\"></span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\");\n        }\n\n        if (loading) {\n          $(modal_id + ' .modal-loader').show();\n        } else {\n          $(modal_id + ' .modal-loader').hide();\n        }\n      }\n    },\n    handleByAjax: function handleByAjax(options, modalLoadingTimer) {\n      $.ajax({\n        url: options.modal_url,\n        dataType: 'html',\n        success: function success(resp) {\n          clearTimeout(modalLoadingTimer);\n\n          if (resp) {\n            $(options.modal_id + ' .modal-content').html(resp);\n          }\n\n          if (!$(options.modal_id).hasClass('show')) {\n            $(options.modal_id).modal('show');\n            BaseModal.loader(options.modal_id, false);\n          }\n\n          BasePlugin.init();\n\n          if ($.isFunction(options.callback)) {\n            options.callback(options);\n          }\n        },\n        error: function error(resp) {\n          clearTimeout(modalLoadingTimer);\n          $(options.modal_id + ' .modal-content').html(\"\\n\\t\\t\\t\\t\\t\\t<div class=\\\"modal-header border-0\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"modal-title\\\">Error!</h4>\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><i aria-hidden=\\\"true\\\" class=\\\"ki ki-close\\\"></i></button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"modal-body py-5\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tTerjadi kesalahan!\\n\\t\\t\\t\\t\\t\\t\\t</div>\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\");\n\n          if (!$(options.modal_id).hasClass('show')) {\n            $(options.modal_id).modal('show');\n            BaseModal.loader(options.modal_id, false);\n          }\n        }\n      });\n    },\n    confirm: function confirm(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return function (options) {\n        var el = $(element);\n        var defaultOptions = {\n          confirm_text: el.data('confirm-text') ? el.data('confirm-text') : 'Are you sure?',\n          url: el.attr('href') ? el.attr('href') : el.data('modal-url') ? el.data('modal-url') : '',\n          method: el.attr('method') ? el.attr('method') : el.data('method') ? el.data('method') : 'DELETE',\n          submit_class: el.data('submit-class') ? el.data('submit-class') : 'base-form--submit-modal',\n          modal_ajax: false,\n          modal_id: '#modal_confirm',\n          modal_size: 'modal-confirm',\n          modal_position: 'modal-dialog-centered modal-dialog-right-top',\n          callback: function callback(options, modalLoadingTimer) {\n            clearTimeout(modalLoadingTimer);\n            $('#gritter-notice-wrapper').hide();\n            $(options.modal_id + ' .modal-content').html(\"\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"modal-body py-5 pl-5\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<form action=\\\"\" + options.url + \"\\\" method=\\\"POST\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"_token\\\" value=\\\"\" + BaseUtil.getToken() + \"\\\">\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"_method\\\" value=\\\"\" + options.method + \"\\\">\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"width-full\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"valign-middle text-bold pr-5\\\">\" + options.confirm_text + \"</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"valign-middle text-right width-150px\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-icon btn-circle btn-secondary \" + options.submit_class + \"\\\" data-url=\\\"\" + options.url + \"\\\"><i class=\\\"fa fa-check p-0\\\"></i></button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-icon btn-circle btn-danger\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\"><i class=\\\"ki ki-close p-0\\\"></i></button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\");\n\n            if (!$(options.modal_id).hasClass('show')) {\n              $(options.modal_id).modal('show');\n              BaseModal.loader(options.modal_id, false);\n            }\n          }\n        },\n            options = $.extend(defaultOptions, options);\n        BaseModal.render(element, options);\n      }(options);\n    },\n    documentEvent: function documentEvent() {\n      $(document).on('click', '.base-modal--render', function (e) {\n        e.preventDefault();\n        BaseModal.render(this);\n      });\n    }\n  };\n}(); // webpack support\n\n\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = BaseModal;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL3NyYy9qcy9iYXNlL0Jhc2VNb2RhbC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1BLFNBQVMsR0FBRyxZQUFZO0VBQzdCLE9BQU87SUFDTkMsTUFBTSxFQUFFLGdCQUFVQyxPQUFWO01BQUEsSUFBbUJDLE9BQW5CLHVFQUE2QixFQUE3QjtNQUFBLDBCQUFpQztRQUFBOztRQUN4QyxJQUFJQyxFQUFFLEdBQUdDLENBQUMsQ0FBQ0gsT0FBRCxDQUFWO1FBQ0EsSUFBSUksY0FBYyxHQUFHO1VBQ25CQyxRQUFRLGNBQVFILEVBQUUsQ0FBQ0ksSUFBSCxDQUFRLFVBQVIsQ0FBUiwrQ0FBK0IsUUFEcEI7VUFFbkJDLGNBQWMsZUFBRUwsRUFBRSxDQUFDSSxJQUFILENBQVEsZ0JBQVIsQ0FBRixpREFBK0IsaURBRjFCO1VBR25CRSxVQUFVLEVBQU1OLEVBQUUsQ0FBQ0ksSUFBSCxDQUFRLFlBQVIsSUFBd0JKLEVBQUUsQ0FBQ0ksSUFBSCxDQUFRLFlBQVIsQ0FBeEIsR0FBZ0QsVUFIN0M7VUFJbkJHLFFBQVEsRUFBUVAsRUFBRSxDQUFDSSxJQUFILENBQVEsVUFBUixJQUFzQkosRUFBRSxDQUFDSSxJQUFILENBQVEsVUFBUixDQUF0QixHQUE0QyxFQUp6QztVQUtuQkksV0FBVyxFQUFLUixFQUFFLENBQUNJLElBQUgsQ0FBUSxhQUFSLElBQXlCSixFQUFFLENBQUNJLElBQUgsQ0FBUSxhQUFSLENBQXpCLEdBQWtELEdBTC9DO1VBTW5CSyxZQUFZLEVBQUlULEVBQUUsQ0FBQ0ksSUFBSCxDQUFRLGNBQVIsSUFBMEJKLEVBQUUsQ0FBQ0ksSUFBSCxDQUFRLGNBQVIsQ0FBMUIsR0FBb0QsVUFOakQ7VUFPbkJNLGNBQWMsRUFBRVYsRUFBRSxDQUFDSSxJQUFILENBQVEsZ0JBQVIsSUFBNEJKLEVBQUUsQ0FBQ0ksSUFBSCxDQUFRLGdCQUFSLENBQTVCLEdBQXdELFFBUHJEO1VBUW5CTyxjQUFjLEVBQUVY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Q0F6RCxTQUFTLENBQUNDLE1BQVYsQ0FBaUIsSUFBakI7TUFDQSxDQUhEO0lBSUE7RUF0SkssQ0FBUDtBQXdKQSxDQXpKaUIsRUFBbEIsQyxDQTJKQTs7O0FBQ0EsSUFBSSxTQUFpQyxPQUFPeUQsTUFBTSxDQUFDQyxPQUFkLEtBQTBCLFdBQS9ELEVBQTRFO0VBQ3hFRCxNQUFNLENBQUNDLE9BQVAsR0FBaUIzRCxTQUFqQjtBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2Fzc2V0cy9zcmMvanMvYmFzZS9CYXNlTW9kYWwuanM/MDJmMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gQkFTRSBNT0RBTCA9PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIHJldHVybiByZW5kZXIob3B0aW9ucyksIGxvYWRlcihtb2RhbF9pZCwgbG9hZGluZz10cnVlKVxyXG4gKi9cclxuY29uc3QgQmFzZU1vZGFsID0gZnVuY3Rpb24gKCkge1xyXG5cdHJldHVybiB7XHJcblx0XHRyZW5kZXI6IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zID0ge30pIHtcclxuXHRcdFx0dmFyIGVsID0gJChlbGVtZW50KTtcclxuXHRcdFx0dmFyIGRlZmF1bHRPcHRpb25zID0ge1xyXG5cdFx0XHRcdFx0bW9kYWxfaWQgICAgICA6IGVsLmRhdGEoJ21vZGFsLWlkJykgPz8gJyNtb2RhbCcsXHJcblx0XHRcdFx0XHRtb2RhbF9wb3NpdGlvbjogZWwuZGF0YSgnbW9kYWwtcG9zaXRpb24nKSA/PyAnbW9kYWwtZGlhbG9nLWNlbnRlcmVkIG1vZGFsLWRpYWxvZy1yaWdodC1ib3R0b20nLCBcclxuXHRcdFx0XHRcdG1vZGFsX3NpemUgICAgOiBlbC5kYXRhKCdtb2RhbC1zaXplJykgPyBlbC5kYXRhKCdtb2RhbC1zaXplJykgOiAnbW9kYWwtbWQnLFxyXG5cdFx0XHRcdFx0bW9kYWxfYmcgICAgICA6IGVsLmRhdGEoJ21vZGFsLWJnJykgPyBlbC5kYXRhKCdtb2RhbC1iZycpIDogJycsXHJcblx0XHRcdFx0XHRtb2RhbF90aW1lciAgIDogZWwuZGF0YSgnbW9kYWwtdGltZXInKSA/IGVsLmRhdGEoJ21vZGFsLXRpbWVyJykgOiA1MDAsXHJcblx0XHRcdFx0XHRtb2RhbF9wYXJlbnQgIDogZWwuZGF0YSgnbW9kYWwtcGFyZW50JykgPyBlbC5kYXRhKCdtb2RhbC1wYXJlbnQnKSA6ICcjY29udGVudCcsXHJcblx0XHRcdFx0XHRtb2RhbF9iYWNrZHJvcDogZWwuZGF0YSgnbW9kYWwtYmFja2Ryb3AnKSA/IGVsLmRhdGEoJ21vZGFsLWJhY2tkcm9wJykgOiAnc3RhdGljJyxcclxuXHRcdFx0XHRcdG1vZGFsX2tleWJvYXJkOiBlbC5kYXRhKCdtb2RhbC1rZXlib2FyZCcpID8gZWwuZGF0YSgnbW9kYWwta2V5Ym9hcmQnKSA6IGZhbHNlLFxyXG5cdFx0XHRcdFx0bW9kYWxfYWpheCAgICA6IGVsLmRhdGEoJ21vZGFsLWFqYXgnKSA9PSBmYWxzZSA/IGZhbHNlIDogdHJ1ZSxcclxuXHRcdFx0XHRcdG1vZGFsX3VybCAgICAgOiBlbC5hdHRyKCdocmVmJykgPyBlbC5hdHRyKCdocmVmJykgOiAoZWwuZGF0YSgnbW9kYWwtdXJsJykgPyBlbC5kYXRhKCdtb2RhbC11cmwnKSA6ICcnICksXHJcblx0XHRcdFx0XHRjYWxsYmFjayAgICAgIDogZmFsc2VcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdG9wdGlvbnMgPSAkLmV4dGVuZChkZWZhdWx0T3B0aW9ucywgb3B0aW9ucyk7XHJcblx0XHRcdFxyXG5cdFx0XHQkKG9wdGlvbnMubW9kYWxfaWQpLnJlbW92ZSgpO1xyXG5cdFx0XHRpZiAoJChvcHRpb25zLm1vZGFsX3BhcmVudCkubGVuZ3RoID09IDApIHtcclxuXHRcdFx0XHRvcHRpb25zLm1vZGFsX3BhcmVudCA9ICdib2R5JztcclxuXHRcdFx0fVxyXG5cdFx0XHQkKG9wdGlvbnMubW9kYWxfcGFyZW50KS5hcHBlbmQoYFxyXG5cdFx0XHRcdDxkaXYgY2xhc3M9XCJtb2RhbCBmYWRlIG1vZGFsLWxvYWRpbmcgY29udGVudC1wYWdlXCIgXHJcblx0XHRcdFx0XHRpZD1cImArKG9wdGlvbnMubW9kYWxfaWQucmVwbGFjZSgnIycsICcnKSkrYFwiIFxyXG5cdFx0XHRcdFx0ZGF0YS1rZXlib2FyZD1cImArb3B0aW9ucy5tb2RhbF9rZXlib2FyZCtgXCIgXHJcblx0XHRcdFx0XHRkYXRhLWJhY2tkcm9wPVwiYCtvcHRpb25zLm1vZGFsX2JhY2tkcm9wK2BcIiA+XHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwibW9kYWwtZGlhbG9nIGArb3B0aW9ucy5tb2RhbF9zaXplK2AgYCtvcHRpb25zLm1vZGFsX3Bvc2l0aW9uK2BcIiBkYXRhLW1vZHVsZS1uYW1lPVwiYCtNb2R1bGVBcHAuZ2V0TmFtZSgpK2BcIj5cclxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzcz1cIm1vZGFsLWNvbnRlbnQgYCtvcHRpb25zLm1vZGFsX2JnK2BcIj48L2Rpdj5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRgKTtcclxuXHRcdFx0XHJcblx0XHRcdHZhciBtb2RhbExvYWRpbmdUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdCQob3B0aW9ucy5tb2RhbF9pZCkubW9kYWwoJ3Nob3cnKTtcclxuXHRcdFx0XHRCYXNlTW9kYWwubG9hZGVyKG9wdGlvbnMubW9kYWxfaWQsIHRydWUpO1xyXG5cdFx0XHR9LCBvcHRpb25zLm1vZGFsX3RpbWVyKTtcclxuXHJcblx0XHRcdGlmIChvcHRpb25zLm1vZGFsX2FqYXggIT09IGZhbHNlICYmIG9wdGlvbnMubW9kYWxfdXJsICE9PSAnJykge1xyXG5cdFx0XHRcdEJhc2VNb2RhbC5oYW5kbGVCeUFqYXgob3B0aW9ucywgbW9kYWxMb2FkaW5nVGltZXIpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdGlmICgkLmlzRnVuY3Rpb24ob3B0aW9ucy5jYWxsYmFjaykpIHtcclxuXHRcdFx0XHRcdG9wdGlvbnMuY2FsbGJhY2sob3B0aW9ucywgbW9kYWxMb2FkaW5nVGltZXIpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdH0sXHJcblx0XHRsb2FkZXI6IGZ1bmN0aW9uIChtb2RhbF9pZCA9ICcjbW9kYWwnLCBsb2FkaW5nPXRydWUpIHtcclxuXHRcdFx0aWYgKCQobW9kYWxfaWQpLmxlbmd0aCkge1xyXG5cdFx0XHRcdGlmICgkKG1vZGFsX2lkKycgLm1vZGFsLWxvYWRlcicpLmxlbmd0aCA9PSAwKSB7XHJcblx0XHRcdFx0XHQkKG1vZGFsX2lkKycgLm1vZGFsLWNvbnRlbnQnKS5hcHBlbmQoYFxyXG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwibW9kYWwtbG9hZGVyIHB0LTZcIj5cclxuXHRcdFx0XHRcdFx0XHQ8c3BhbiBjbGFzcz1cInNwaW5uZXIgc3Bpbm5lci1wcmltYXJ5XCI+PC9zcGFuPlxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdGApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRpZiAobG9hZGluZykge1xyXG5cdFx0XHRcdFx0JChtb2RhbF9pZCsnIC5tb2RhbC1sb2FkZXInKS5zaG93KCk7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdCQobW9kYWxfaWQrJyAubW9kYWwtbG9hZGVyJykuaGlkZSgpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdGhhbmRsZUJ5QWpheDogZnVuY3Rpb24gKG9wdGlvbnMsIG1vZGFsTG9hZGluZ1RpbWVyKSB7XHJcblx0XHRcdCQuYWpheCh7XHJcblx0XHRcdFx0dXJsOiBvcHRpb25zLm1vZGFsX3VybCxcclxuXHRcdFx0XHRkYXRhVHlwZTogJ2h0bWwnLFxyXG5cdFx0XHRcdHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwKSB7XHJcblx0XHRcdFx0XHRjbGVhclRpbWVvdXQobW9kYWxMb2FkaW5nVGltZXIpO1xyXG5cdFx0XHRcdFx0aWYgKHJlc3ApIHtcclxuXHRcdFx0XHRcdFx0JChvcHRpb25zLm1vZGFsX2lkKycgLm1vZGFsLWNvbnRlbnQnKS5odG1sKHJlc3ApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0aWYgKCEkKG9wdGlvbnMubW9kYWxfaWQpLmhhc0NsYXNzKCdzaG93JykpIHtcclxuXHRcdFx0XHRcdFx0JChvcHRpb25zLm1vZGFsX2lkKS5tb2RhbCgnc2hvdycpO1xyXG5cdFx0XHRcdFx0XHRCYXNlTW9kYWwubG9hZGVyKG9wdGlvbnMubW9kYWxfaWQsIGZhbHNlKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdEJhc2VQbHVnaW4uaW5pdCgpO1xyXG5cdFx0XHRcdFx0aWYgKCQuaXNGdW5jdGlvbihvcHRpb25zLmNhbGxiYWNrKSkge1xyXG5cdFx0XHRcdFx0XHRvcHRpb25zLmNhbGxiYWNrKG9wdGlvbnMpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0ZXJyb3I6IGZ1bmN0aW9uIChyZXNwKSB7XHJcblx0XHRcdFx0XHRjbGVhclRpbWVvdXQobW9kYWxMb2FkaW5nVGltZXIpO1xyXG5cdFx0XHRcdFx0JChvcHRpb25zLm1vZGFsX2lkKycgLm1vZGFsLWNvbnRlbnQnKS5odG1sKGBcclxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzcz1cIm1vZGFsLWhlYWRlciBib3JkZXItMFwiPlxyXG5cdFx0XHRcdFx0XHRcdDxoNCBjbGFzcz1cIm1vZGFsLXRpdGxlXCI+RXJyb3IhPC9oND5cclxuXHRcdFx0XHRcdFx0XHQ8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImNsb3NlXCIgZGF0YS1kaXNtaXNzPVwibW9kYWxcIiBhcmlhLWxhYmVsPVwiQ2xvc2VcIj48aSBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cImtpIGtpLWNsb3NlXCI+PC9pPjwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzcz1cIm1vZGFsLWJvZHkgcHktNVwiPlxyXG5cdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1kYW5nZXJcIj5cclxuXHRcdFx0XHRcdFx0XHRcdFRlcmphZGkga2VzYWxhaGFuIVxyXG5cdFx0XHRcdFx0XHRcdDwvZGl2Plx0XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0YCk7XHJcblx0XHRcdFx0XHRpZiAoISQob3B0aW9ucy5tb2RhbF9pZCkuaGFzQ2xhc3MoJ3Nob3cnKSkge1xyXG5cdFx0XHRcdFx0XHQkKG9wdGlvbnMubW9kYWxfaWQpLm1vZGFsKCdzaG93Jyk7XHJcblx0XHRcdFx0XHRcdEJhc2VNb2RhbC5sb2FkZXIob3B0aW9ucy5tb2RhbF9pZCwgZmFsc2UpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdH0pO1xyXG5cdFx0fSxcclxuXHRcdGNvbmZpcm06IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zID0ge30pIHtcclxuXHRcdFx0dmFyIGVsID0gJChlbGVtZW50KTtcclxuXHRcdFx0dmFyIGRlZmF1bHRPcHRpb25zID0ge1xyXG5cdFx0XHRcdFx0Y29uZmlybV90ZXh0ICA6IGVsLmRhdGEoJ2NvbmZpcm0tdGV4dCcpID8gZWwuZGF0YSgnY29uZmlybS10ZXh0JykgOiAnQXJlIHlvdSBzdXJlPycsXHJcblx0XHRcdFx0XHR1cmwgICAgICAgICAgIDogZWwuYXR0cignaHJlZicpID8gZWwuYXR0cignaHJlZicpIDogKGVsLmRhdGEoJ21vZGFsLXVybCcpID8gZWwuZGF0YSgnbW9kYWwtdXJsJykgOiAnJyksXHJcblx0XHRcdFx0XHRtZXRob2QgICAgICAgIDogZWwuYXR0cignbWV0aG9kJykgPyBlbC5hdHRyKCdtZXRob2QnKSA6IChlbC5kYXRhKCdtZXRob2QnKSA/IGVsLmRhdGEoJ21ldGhvZCcpIDogJ0RFTEVURScpLFxyXG5cdFx0XHRcdFx0c3VibWl0X2NsYXNzICA6IGVsLmRhdGEoJ3N1Ym1pdC1jbGFzcycpID8gZWwuZGF0YSgnc3VibWl0LWNsYXNzJykgOiAnYmFzZS1mb3JtLS1zdWJtaXQtbW9kYWwnLFxyXG5cdFx0XHRcdFx0bW9kYWxfYWpheCAgICA6IGZhbHNlLFxyXG5cdFx0XHRcdFx0bW9kYWxfaWQgICAgICA6ICcjbW9kYWxfY29uZmlybScsXHJcblx0XHRcdFx0XHRtb2RhbF9zaXplICAgIDogJ21vZGFsLWNvbmZpcm0nLFxyXG5cdFx0XHRcdFx0bW9kYWxfcG9zaXRpb246ICdtb2RhbC1kaWFsb2ctY2VudGVyZWQgbW9kYWwtZGlhbG9nLXJpZ2h0LXRvcCcsXHJcblx0XHRcdFx0XHRjYWxsYmFjazogZnVuY3Rpb24gKG9wdGlvbnMsIG1vZGFsTG9hZGluZ1RpbWVyKSB7XHJcblx0XHRcdFx0XHRcdGNsZWFyVGltZW91dChtb2RhbExvYWRpbmdUaW1lcik7XHJcblx0XHRcdFx0XHRcdCQoJyNncml0dGVyLW5vdGljZS13cmFwcGVyJykuaGlkZSgpO1xyXG5cdFx0XHRcdFx0XHQkKG9wdGlvbnMubW9kYWxfaWQrJyAubW9kYWwtY29udGVudCcpLmh0bWwoYFxyXG5cdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJtb2RhbC1ib2R5IHB5LTUgcGwtNVwiPlxyXG5cdFx0XHRcdFx0XHRcdFx0PGZvcm0gYWN0aW9uPVwiYCtvcHRpb25zLnVybCtgXCIgbWV0aG9kPVwiUE9TVFwiPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJfdG9rZW5cIiB2YWx1ZT1cImArQmFzZVV0aWwuZ2V0VG9rZW4oKStgXCI+XHRcclxuXHRcdFx0XHRcdFx0XHRcdFx0PGlucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwiX21ldGhvZFwiIHZhbHVlPVwiYCtvcHRpb25zLm1ldGhvZCtgXCI+XHRcclxuXHRcdFx0XHRcdFx0XHRcdFx0PHRhYmxlIGNsYXNzPVwid2lkdGgtZnVsbFwiPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDx0Ym9keT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdDx0cj5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0PHRkIGNsYXNzPVwidmFsaWduLW1pZGRsZSB0ZXh0LWJvbGQgcHItNVwiPmArb3B0aW9ucy5jb25maXJtX3RleHQrYDwvdGQ+XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdDx0ZCBjbGFzcz1cInZhbGlnbi1taWRkbGUgdGV4dC1yaWdodCB3aWR0aC0xNTBweFwiPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdDxidXR0b24gdHlwZT1cInN1Ym1pdFwiIGNsYXNzPVwiYnRuIGJ0bi1pY29uIGJ0bi1jaXJjbGUgYnRuLXNlY29uZGFyeSBgK29wdGlvbnMuc3VibWl0X2NsYXNzK2BcIiBkYXRhLXVybD1cImArb3B0aW9ucy51cmwrYFwiPjxpIGNsYXNzPVwiZmEgZmEtY2hlY2sgcC0wXCI+PC9pPjwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiYnRuIGJ0bi1pY29uIGJ0bi1jaXJjbGUgYnRuLWRhbmdlclwiIGRhdGEtZGlzbWlzcz1cIm1vZGFsXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PGkgY2xhc3M9XCJraSBraS1jbG9zZSBwLTBcIj48L2k+PC9idXR0b24+XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdDwvdGQ+XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8L3RyPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDwvdGJvZHk+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDwvdGFibGU+XHJcblx0XHRcdFx0XHRcdFx0XHQ8L2Zvcm0+XHJcblx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdGApO1xyXG5cdFx0XHRcdFx0XHRpZiAoISQob3B0aW9ucy5tb2RhbF9pZCkuaGFzQ2xhc3MoJ3Nob3cnKSkge1xyXG5cdFx0XHRcdFx0XHRcdCQob3B0aW9ucy5tb2RhbF9pZCkubW9kYWwoJ3Nob3cnKTtcclxuXHRcdFx0XHRcdFx0XHRCYXNlTW9kYWwubG9hZGVyKG9wdGlvbnMubW9kYWxfaWQsIGZhbHNlKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0b3B0aW9ucyA9ICQuZXh0ZW5kKGRlZmF1bHRPcHRpb25zLCBvcHRpb25zKTtcclxuXHJcblx0XHRcdEJhc2VNb2RhbC5yZW5kZXIoZWxlbWVudCwgb3B0aW9ucyk7XHJcblx0XHR9LFxyXG5cdFx0ZG9jdW1lbnRFdmVudDogZnVuY3Rpb24gKCkge1xyXG5cdFx0XHQkKGRvY3VtZW50KS5vbignY2xpY2snLCAnLmJhc2UtbW9kYWwtLXJlbmRlcicsIGZ1bmN0aW9uIChlKSB7XHJcblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHRcdEJhc2VNb2RhbC5yZW5kZXIodGhpcyk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdH1cclxufSgpO1xyXG5cclxuLy8gd2VicGFjayBzdXBwb3J0XHJcbmlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgbW9kdWxlLmV4cG9ydHMgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICBtb2R1bGUuZXhwb3J0cyA9IEJhc2VNb2RhbDtcclxufSJdLCJuYW1lcyI6WyJCYXNlTW9kYWwiLCJyZW5kZXIiLCJlbGVtZW50Iiwib3B0aW9ucyIsImVsIiwiJCIsImRlZmF1bHRPcHRpb25zIiwibW9kYWxfaWQiLCJkYXRhIiwibW9kYWxfcG9zaXRpb24iLCJtb2RhbF9zaXplIiwibW9kYWxfYmciLCJtb2RhbF90aW1lciIsIm1vZGFsX3BhcmVudCIsIm1vZGFsX2JhY2tkcm9wIiwibW9kYWxfa2V5Ym9hcmQiLCJtb2RhbF9hamF4IiwibW9kYWxfdXJsIiwiYXR0ciIsImNhbGxiYWNrIiwiZXh0ZW5kIiwicmVtb3ZlIiwibGVuZ3RoIiwiYXBwZW5kIiwicmVwbGFjZSIsIk1vZHVsZUFwcCIsImdldE5hbWUiLCJtb2RhbExvYWRpbmdUaW1lciIsInNldFRpbWVvdXQiLCJtb2RhbCIsImxvYWRlciIsImhhbmRsZUJ5QWpheCIsImlzRnVuY3Rpb24iLCJsb2FkaW5nIiwic2hvdyIsImhpZGUiLCJhamF4IiwidXJsIiwiZGF0YVR5cGUiLCJzdWNjZXNzIiwicmVzcCIsImNsZWFyVGltZW91dCIsImh0bWwiLCJoYXNDbGFzcyIsIkJhc2VQbHVnaW4iLCJpbml0IiwiZXJyb3IiLCJjb25maXJtIiwiY29uZmlybV90ZXh0IiwibWV0aG9kIiwic3VibWl0X2NsYXNzIiwiQmFzZVV0aWwiLCJnZXRUb2tlbiIsImRvY3VtZW50RXZlbnQiLCJkb2N1bWVudCIsIm9uIiwiZSIsInByZXZlbnREZWZhdWx0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base/BaseModal.js\n");

/***/ }),

/***/ "./resources/assets/src/js/base/BasePlugin.js":
/*!****************************************************!*\
  !*** ./resources/assets/src/js/base/BasePlugin.js ***!
  \****************************************************/
/***/ ((module) => {

eval("/**\r\n * ============================= BASE PLUGINS ============================\r\n * return render(options), loader(modal_id, loading=true)\r\n */\nvar BasePlugin = function () {\n  \"use strict\";\n\n  return {\n    init: function init() {\n      this.initTooltipPopover();\n      this.initSelect2();\n      this.initSelectpicker();\n      this.initDatepicker();\n      this.initTimepicker();\n      this.initSummernote();\n      this.initInputMask();\n      this.initTouchSpin();\n    },\n    initTooltipPopover: function initTooltipPopover() {\n      $('.tooltip').remove();\n\n      if ($('[data-toggle=\"tooltip\"]').length) {\n        $.each($('[data-toggle=\"tooltip\"]'), function (i, el) {\n          $(el).tooltip();\n        });\n      }\n\n      if ($('[data-toggle=\"popover\"]').length) {\n        $.each($('[data-toggle=\"popover\"]'), function (i, el) {\n          $(el).popover();\n        });\n      }\n    },\n    initSelect2: function initSelect2() {\n      $('select.select2-hidden-accessible').select2('close');\n\n      if ($('.base-plugin--select2').length) {\n        $.each($('.base-plugin--select2'), function (i, el) {\n          var _me$attr, _me$data;\n\n          var me = $(el),\n              defaultsOptions = {\n            placeholder: (_me$attr = me.attr('placeholder')) !== null && _me$attr !== void 0 ? _me$attr : me.attr('data-placeholder'),\n            dropdownParent: me.closest('form').length ? me.closest('form') : me.closest('body')\n          },\n              options = (_me$data = me.data('options')) !== null && _me$data !== void 0 ? _me$data : {};\n          options = $.extend(defaultsOptions, options);\n          me.select2(options);\n        });\n      }\n\n      if ($('.base-plugin--select2-ajax').length) {\n        $.each($('.base-plugin--select2-ajax'), function (i, el) {\n          var _me$data2, _me$data3, _me$data4, _me$attr2, _me$data5;\n\n          var me = $(el),\n              defaultsOptions = {\n            url: me.data('url'),\n            method: (_me$data2 = me.data('method')) !== null && _me$data2 !== void 0 ? _me$data2 : 'POST',\n            delay: (_me$data3 = me.data('delay')) !== null && _me$data3 !== void 0 ? _me$data3 : 500,\n            cache: (_me$data4 = me.data('cache')) !== null && _me$data4 !== void 0 ? _me$data4 : true,\n            minimumInputLength: me.data('min-input-length'),\n            placeholder: (_me$attr2 = me.attr('placeholder')) !== null && _me$attr2 !== void 0 ? _me$attr2 : me.attr('data-placeholder'),\n            dropdownParent: me.closest('form').length ? me.closest('form') : me.closest('body')\n          },\n              options = (_me$data5 = me.data('options')) !== null && _me$data5 !== void 0 ? _me$data5 : {};\n          options = $.extend(defaultsOptions, options);\n\n          if (options.url) {\n            me.select2({\n              ajax: {\n                url: options.url,\n                type: options.method,\n                dataType: 'json',\n                delay: options.delay,\n                cache: options.cache,\n                data: function data(params) {\n                  return {\n                    _token: BaseUtil.getToken(),\n                    keyword: params.term,\n                    // search term\n                    page: params.page\n                  };\n                },\n                processResults: function processResults(resp, params) {\n                  var _resp$results, _resp$more;\n\n                  params.page = params.page || 1;\n                  return {\n                    results: (_resp$results = resp.results) !== null && _resp$results !== void 0 ? _resp$results : [],\n                    pagination: {\n                      more: (_resp$more = resp.more) !== null && _resp$more !== void 0 ? _resp$more : false\n                    }\n                  };\n                }\n              },\n              minimumInputLength: options.minimumInputLength,\n              placeholder: options.placeholder,\n              dropdownParent: options.dropdownParent\n            });\n          } else {\n            me.select2({\n              placeholder: options.placeholder,\n              dropdownParent: options.dropdownParent\n            });\n          }\n        });\n      }\n    },\n    initSelectpicker: function initSelectpicker() {\n      if ($('select.base-plugin--select, select.base-plugin--selectpicker').length) {\n        alert(\"Please use class base-plugin--select2\");\n      }\n    },\n    initDatepicker: function initDatepicker() {\n      var _$$attr;\n\n      $.fn.datepicker.defaults.format = \"dd/mm/yyyy\";\n      $.fn.datepicker.defaults.language = (_$$attr = $('html').attr('lang')) !== null && _$$attr !== void 0 ? _$$attr : \"en\";\n\n      if ($('.base-plugin--datepicker, .base-plugin--datepicker-1').length) {\n        $.each($('.base-plugin--datepicker, .base-plugin--datepicker-1'), function (i, el) {\n          var _me$data6, _me$data7, _me$data8, _me$data9, _me$data10, _me$data11, _me$data12;\n\n          var me = $(el),\n              defaultsOptions = {\n            autoclose: (_me$data6 = me.data('auto-close')) !== null && _me$data6 !== void 0 ? _me$data6 : true,\n            todayHighlight: (_me$data7 = me.data('today-highlight')) !== null && _me$data7 !== void 0 ? _me$data7 : true,\n            orientation: (_me$data8 = me.data('orientation')) !== null && _me$data8 !== void 0 ? _me$data8 : 'auto',\n            format: (_me$data9 = me.data('format')) !== null && _me$data9 !== void 0 ? _me$data9 : 'dd/mm/yyyy',\n            startView: (_me$data10 = me.data('start-view')) !== null && _me$data10 !== void 0 ? _me$data10 : \"days\",\n            minViewMode: (_me$data11 = me.data('min-view')) !== null && _me$data11 !== void 0 ? _me$data11 : \"days\"\n          },\n              options = (_me$data12 = me.data('options')) !== null && _me$data12 !== void 0 ? _me$data12 : {};\n          options = $.extend(defaultsOptions, options);\n          me.datepicker(options);\n        });\n      }\n\n      if ($('.base-plugin--datepicker-2').length) {\n        $.each($('.base-plugin--datepicker-2'), function (i, el) {\n          var _me$data13, _me$data14, _me$data15, _me$data16, _me$data17, _me$data18, _me$data19;\n\n          var me = $(el),\n              defaultsOptions = {\n            autoclose: (_me$data13 = me.data('auto-close')) !== null && _me$data13 !== void 0 ? _me$data13 : true,\n            todayHighlight: (_me$data14 = me.data('today-highlight')) !== null && _me$data14 !== void 0 ? _me$data14 : true,\n            orientation: (_me$data15 = me.data('orientation')) !== null && _me$data15 !== void 0 ? _me$data15 : 'auto',\n            format: (_me$data16 = me.data('format')) !== null && _me$data16 !== void 0 ? _me$data16 : 'mm/yyyy',\n            startView: (_me$data17 = me.data('start-view')) !== null && _me$data17 !== void 0 ? _me$data17 : \"months\",\n            minViewMode: (_me$data18 = me.data('min-view')) !== null && _me$data18 !== void 0 ? _me$data18 : \"months\"\n          },\n              options = (_me$data19 = me.data('options')) !== null && _me$data19 !== void 0 ? _me$data19 : {};\n          options = $.extend(defaultsOptions, options);\n          me.datepicker(options);\n        });\n      }\n\n      if ($('.base-plugin--datepicker-3').length) {\n        $.each($('.base-plugin--datepicker-3'), function (i, el) {\n          var _me$data20, _me$data21, _me$data22, _me$data23, _me$data24, _me$data25, _me$data26;\n\n          var me = $(el),\n              defaultsOptions = {\n            autoclose: (_me$data20 = me.data('auto-close')) !== null && _me$data20 !== void 0 ? _me$data20 : true,\n            todayHighlight: (_me$data21 = me.data('today-highlight')) !== null && _me$data21 !== void 0 ? _me$data21 : true,\n            orientation: (_me$data22 = me.data('orientation')) !== null && _me$data22 !== void 0 ? _me$data22 : 'auto',\n            format: (_me$data23 = me.data('format')) !== null && _me$data23 !== void 0 ? _me$data23 : 'yyyy',\n            startView: (_me$data24 = me.data('start-view')) !== null && _me$data24 !== void 0 ? _me$data24 : \"years\",\n            minViewMode: (_me$data25 = me.data('min-view')) !== null && _me$data25 !== void 0 ? _me$data25 : \"years\"\n          },\n              options = (_me$data26 = me.data('options')) !== null && _me$data26 !== void 0 ? _me$data26 : {};\n          options = $.extend(defaultsOptions, options);\n          me.datepicker(options);\n        });\n      }\n    },\n    initTimepicker: function initTimepicker() {\n      if ($('.base-plugin--timepicker').length) {\n        $.each($('.base-plugin--timepicker'), function (i, el) {\n          var _me$data27, _me$data28, _me$data29, _me$data30, _me$data31, _me$data32, _me$data33;\n\n          var me = $(el),\n              defaultsOptions = {\n            minuteStep: (_me$data27 = me.data('minute-step')) !== null && _me$data27 !== void 0 ? _me$data27 : 2,\n            defaultTime: (_me$data28 = me.data('default-time')) !== null && _me$data28 !== void 0 ? _me$data28 : '00:00',\n            showSeconds: (_me$data29 = me.data('show-seconds')) !== null && _me$data29 !== void 0 ? _me$data29 : false,\n            showMeridian: (_me$data30 = me.data('show-meridian')) !== null && _me$data30 !== void 0 ? _me$data30 : false,\n            snapToStep: (_me$data31 = me.data('snap-to-step')) !== null && _me$data31 !== void 0 ? _me$data31 : true,\n            orientation: (_me$data32 = me.data('orientation')) !== null && _me$data32 !== void 0 ? _me$data32 : 'auto'\n          },\n              options = (_me$data33 = me.data('options')) !== null && _me$data33 !== void 0 ? _me$data33 : {};\n          options = $.extend(defaultsOptions, options);\n          me.timepicker(options);\n        });\n      }\n    },\n    initSummernote: function initSummernote() {\n      if ($('.base-plugin--summernote-readonly').length) {\n        $('.base-plugin--summernote-readonly').append(\"\\n\\t\\t\\t\\t\\t<div class=\\\"note-statusbar\\\" role=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"note-resizebar\\\" aria-label=\\\"Resize\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"note-icon-bar\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"note-icon-bar\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"note-icon-bar\\\"></div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\");\n      }\n\n      if ($('.base-plugin--summernote, .base-plugin--summernote-1').length) {\n        $.each($('.base-plugin--summernote, .base-plugin--summernote-1'), function (i, el) {\n          var _me$data34, _me$data35;\n\n          var me = $(el),\n              defaultsOptions = {\n            height: (_me$data34 = me.data('height')) !== null && _me$data34 !== void 0 ? _me$data34 : 100,\n            toolbar: me.data('toolbar') != undefined ? me.data('toolbar') : [['font', ['bold', 'italic', 'underline']], ['para', ['ul', 'ol', 'paragraph']], ['table', ['table']], ['insert', ['link', 'picture']]],\n            callbacks: {// callback for pasting text only (no formatting)\n              // onPaste: function (e) {\n              // \tvar bufferText = ((e.originalEvent || e).clipboardData || window.clipboardData).getData('Text');\n              // \te.preventDefault();\n              // \tdocument.execCommand('insertHtml', false, bufferText);\n              // }\n            }\n          },\n              options = (_me$data35 = me.data('options')) !== null && _me$data35 !== void 0 ? _me$data35 : {};\n\n          if (options.toolbarMerge != undefined) {\n            options.toolbar = defaultsOptions.toolbar.concat(options.toolbarMerge);\n          }\n\n          options = $.extend(defaultsOptions, options);\n          me.summernote(options);\n\n          if (me.prop('disabled')) {\n            me.summernote('destroy');\n            me.summernote({\n              toolbar: false\n            });\n            me.parent().find('.note-editable').attr('contenteditable', false);\n          }\n        });\n      }\n\n      if ($('.base-plugin--summernote-2').length) {\n        $.each($('.base-plugin--summernote-2'), function (i, el) {\n          var _me$data36, _me$data37;\n\n          var me = $(el),\n              defaultsOptions = {\n            height: (_me$data36 = me.data('height')) !== null && _me$data36 !== void 0 ? _me$data36 : 300\n          },\n              options = (_me$data37 = me.data('options')) !== null && _me$data37 !== void 0 ? _me$data37 : {};\n          options = $.extend(defaultsOptions, options);\n          me.summernote(options);\n\n          if (me.prop('disabled')) {\n            me.summernote('destroy');\n            me.summernote({\n              toolbar: false\n            });\n            me.parent().find('.note-editable').attr('contenteditable', false);\n          }\n        });\n      }\n    },\n    initInputMask: function initInputMask() {\n      if ($('.base-plugin--inputmask_currency').length) {\n        $(\".base-plugin--inputmask_currency\").inputmask('currency', {\n          alias: \"numeric\",\n          prefix: \"\",\n          groupSeparator: \",\",\n          radixPoint: \".\",\n          digits: 0,\n          digitsOptional: !1,\n          allowMinus: !1\n        });\n      }\n\n      if ($('.base-plugin--inputmask_int').length) {\n        $(\".base-plugin--inputmask_int\").inputmask({\n          \"mask\": \"9\",\n          \"repeat\": 11,\n          \"greedy\": false\n        });\n      }\n\n      if ($('.base-plugin--inputmask_int_4').length) {\n        $(\".base-plugin--inputmask_int_4\").inputmask({\n          \"mask\": \"9\",\n          \"repeat\": 4,\n          \"greedy\": false\n        });\n      }\n\n      if ($('.base-plugin--inputmask_int_2').length) {\n        $(\".base-plugin--inputmask_int_2\").inputmask({\n          \"mask\": \"9\",\n          \"repeat\": 4,\n          \"greedy\": false\n        });\n      }\n\n      if ($('.base-plugin--inputmask_dec_2').length) {\n        $(\".base-plugin--inputmask_dec_2\").inputmask('decimal', {\n          \"digits\": 2,\n          \"rightAlign\": false,\n          \"repeat\": 4,\n          \"greedy\": false\n        });\n      }\n\n      if ($('.base-plugin--inputmask_phone').length) {\n        $(\".base-plugin--inputmask_phone\").inputmask({\n          \"mask\": \"9\",\n          \"repeat\": 15,\n          \"greedy\": false\n        });\n      }\n    },\n    initTouchSpin: function initTouchSpin() {\n      if ($('.base-plugin--touchspin_int').length) {\n        $('.base-plugin--touchspin_int').TouchSpin({\n          buttondown_class: 'btn btn-secondary',\n          buttonup_class: 'btn btn-secondary',\n          verticalbuttons: true,\n          verticalup: '<i class=\"ki ki-plus\"></i>',\n          verticaldown: '<i class=\"ki ki-minus\"></i>',\n          min: 0,\n          max: 9999999999,\n          step: 1,\n          decimals: 0,\n          boostat: 5,\n          maxboostedstep: 10\n        });\n      }\n\n      if ($('.base-plugin--touchspin_dec').length) {\n        $('.base-plugin--touchspin_dec').TouchSpin({\n          buttondown_class: 'btn btn-secondary',\n          buttonup_class: 'btn btn-secondary',\n          verticalbuttons: true,\n          verticalup: '<i class=\"ki ki-plus\"></i>',\n          verticaldown: '<i class=\"ki ki-minus\"></i>',\n          min: 0,\n          max: 9999999999,\n          step: 0.01,\n          decimals: 2,\n          boostat: 5,\n          maxboostedstep: 10\n        });\n      }\n    }\n  };\n}(); // webpack support\n\n\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = BasePlugin;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL3NyYy9qcy9iYXNlL0Jhc2VQbHVnaW4uanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNQSxVQUFVLEdBQUcsWUFBWTtFQUM5Qjs7RUFDQSxPQUFPO0lBQ05DLElBQUksRUFBRSxnQkFBWTtNQUNqQixLQUFLQyxrQkFBTDtNQUNBLEtBQUtDLFdBQUw7TUFDQSxLQUFLQyxnQkFBTDtNQUNBLEtBQUtDLGNBQUw7TUFDQSxLQUFLQyxjQUFMO01BQ0EsS0FBS0MsY0FBTDtNQUNBLEtBQUtDLGFBQUw7TUFDQSxLQUFLQyxhQUFMO0lBQ0EsQ0FWSztJQVdOUCxrQkFBa0IsRUFBRSw4QkFBWTtNQUMvQlEsQ0FBQyxDQUFDLFVBQUQsQ0FBRCxDQUFjQyxNQUFkOztNQUNBLElBQUlELENBQUMsQ0FBQyx5QkFBRCxDQUFELENBQTZCRSxNQUFqQyxFQUF5QztRQUN4Q0YsQ0FBQyxDQUFDRyxJQUFGLENBQU9ILENBQUMsQ0FBQyx5QkFBRCxDQUFSLEVBQXFDLFVBQVVJLENBQVYsRUFBYUMsRUFBYixFQUFpQjtVQUNyREwsQ0FBQyxDQUFDSyxFQUFELENBQUQsQ0FBTUMsT0FBTjtRQUNBLENBRkQ7TUFHQTs7TUFDRCxJQUFJTixDQUFDLENBQUMseUJBQUQsQ0FBRCxDQUE2QkUsTUFBakMsRUFBeUM7UUFDeENGLENBQUMsQ0FBQ0csSUFBRixDQUFPSCxDQUFDLENBQUMseUJBQUQsQ0FBUixFQUFxQyxVQUFVSSxDQUFWLEVBQWFDLEVBQWIsRUFBaUI7VUFDckRMLENBQUMsQ0FBQ0ssRUFBRCxDQUFELENBQU1FLE9BQU47UUFDQSxDQUZEO01BR0E7SUFDRCxDQXZCSztJQXdCTmQsV0FBVyxFQUFFLHVCQUFZO01BQ3hCTyxDQUFDLENBQUMsa0NBQUQsQ0FBRCxDQUFzQ1EsT0FBdEMsQ0FBOEMsT0FBOUM7O01BQ0EsSUFBSVIsQ0FBQyxDQUFDLHVCQUFELENBQUQsQ0FBMkJFLE1BQS9CLEVBQXVDO1FBQ3RDRixDQUFD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NVVrQixFQUFuQixDLENBOFVBOzs7QUFDQSxJQUFJLFNBQWlDLE9BQU9DLE1BQU0sQ0FBQ0MsT0FBZCxLQUEwQixXQUEvRCxFQUE0RTtFQUN4RUQsTUFBTSxDQUFDQyxPQUFQLEdBQWlCakcsVUFBakI7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9hc3NldHMvc3JjL2pzL2Jhc2UvQmFzZVBsdWdpbi5qcz8xODM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBCQVNFIFBMVUdJTlMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiByZXR1cm4gcmVuZGVyKG9wdGlvbnMpLCBsb2FkZXIobW9kYWxfaWQsIGxvYWRpbmc9dHJ1ZSlcclxuICovXHJcbmNvbnN0IEJhc2VQbHVnaW4gPSBmdW5jdGlvbiAoKSB7XHJcblx0XCJ1c2Ugc3RyaWN0XCI7XHJcblx0cmV0dXJuIHtcclxuXHRcdGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0dGhpcy5pbml0VG9vbHRpcFBvcG92ZXIoKTtcclxuXHRcdFx0dGhpcy5pbml0U2VsZWN0MigpO1xyXG5cdFx0XHR0aGlzLmluaXRTZWxlY3RwaWNrZXIoKTtcclxuXHRcdFx0dGhpcy5pbml0RGF0ZXBpY2tlcigpO1xyXG5cdFx0XHR0aGlzLmluaXRUaW1lcGlja2VyKCk7XHJcblx0XHRcdHRoaXMuaW5pdFN1bW1lcm5vdGUoKTtcclxuXHRcdFx0dGhpcy5pbml0SW5wdXRNYXNrKCk7XHJcblx0XHRcdHRoaXMuaW5pdFRvdWNoU3BpbigpO1xyXG5cdFx0fSxcclxuXHRcdGluaXRUb29sdGlwUG9wb3ZlcjogZnVuY3Rpb24gKCkge1xyXG5cdFx0XHQkKCcudG9vbHRpcCcpLnJlbW92ZSgpO1xyXG5cdFx0XHRpZiAoJCgnW2RhdGEtdG9nZ2xlPVwidG9vbHRpcFwiXScpLmxlbmd0aCkge1xyXG5cdFx0XHRcdCQuZWFjaCgkKCdbZGF0YS10b2dnbGU9XCJ0b29sdGlwXCJdJyksIGZ1bmN0aW9uIChpLCBlbCkge1xyXG5cdFx0XHRcdFx0JChlbCkudG9vbHRpcCgpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmICgkKCdbZGF0YS10b2dnbGU9XCJwb3BvdmVyXCJdJykubGVuZ3RoKSB7XHJcblx0XHRcdFx0JC5lYWNoKCQoJ1tkYXRhLXRvZ2dsZT1cInBvcG92ZXJcIl0nKSwgZnVuY3Rpb24gKGksIGVsKSB7XHJcblx0XHRcdFx0XHQkKGVsKS5wb3BvdmVyKCk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHRpbml0U2VsZWN0MjogZnVuY3Rpb24gKCkge1xyXG5cdFx0XHQkKCdzZWxlY3Quc2VsZWN0Mi1oaWRkZW4tYWNjZXNzaWJsZScpLnNlbGVjdDIoJ2Nsb3NlJyk7XHJcblx0XHRcdGlmICgkKCcuYmFzZS1wbHVnaW4tLXNlbGVjdDInKS5sZW5ndGgpIHtcclxuXHRcdFx0XHQkLmVhY2goJCgnLmJhc2UtcGx1Z2luLS1zZWxlY3QyJyksIGZ1bmN0aW9uIChpLCBlbCkge1xyXG5cdFx0XHRcdFx0bGV0IG1lID0gJChlbCksXHJcblx0XHRcdFx0XHRcdGRlZmF1bHRzT3B0aW9ucyA9IHtcclxuXHRcdFx0XHRcdFx0XHRwbGFjZWhvbGRlcjogbWUuYXR0cigncGxhY2Vob2xkZXInKSA/PyBtZS5hdHRyKCdkYXRhLXBsYWNlaG9sZGVyJyksXHJcblx0XHRcdFx0XHRcdFx0ZHJvcGRvd25QYXJlbnQ6IG1lLmNsb3Nlc3QoJ2Zvcm0nKS5sZW5ndGggPyBtZS5jbG9zZXN0KCdmb3JtJykgOiBtZS5jbG9zZXN0KCdib2R5JyksXHJcblx0XHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRcdG9wdGlvbnMgPSBtZS5kYXRhKCdvcHRpb25zJykgPz8ge307XHJcblxyXG5cdFx0XHRcdFx0b3B0aW9ucyA9ICQuZXh0ZW5kKGRlZmF1bHRzT3B0aW9ucywgb3B0aW9ucyk7XHJcblxyXG5cdFx0XHRcdFx0bWUuc2VsZWN0MihvcHRpb25zKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoJCgnLmJhc2UtcGx1Z2luLS1zZWxlY3QyLWFqYXgnKS5sZW5ndGgpIHtcclxuXHRcdFx0XHQkLmVhY2goJCgnLmJhc2UtcGx1Z2luLS1zZWxlY3QyLWFqYXgnKSwgZnVuY3Rpb24gKGksIGVsKSB7XHJcblx0XHRcdFx0XHRsZXQgbWUgPSAkKGVsKSxcclxuXHRcdFx0XHRcdFx0ZGVmYXVsdHNPcHRpb25zID0ge1xyXG5cdFx0XHRcdFx0XHRcdHVybCAgICAgOiBtZS5kYXRhKCd1cmwnKSxcclxuXHRcdFx0XHRcdFx0XHRtZXRob2Q6IG1lLmRhdGEoJ21ldGhvZCcpID8/ICdQT1NUJyxcclxuXHRcdFx0XHRcdFx0XHRkZWxheSAgIDogbWUuZGF0YSgnZGVsYXknKSA/PyA1MDAsXHJcblx0XHRcdFx0XHRcdFx0Y2FjaGUgICA6IG1lLmRhdGEoJ2NhY2hlJykgPz8gdHJ1ZSxcclxuXHRcdFx0XHRcdFx0XHRtaW5pbXVtSW5wdXRMZW5ndGg6IG1lLmRhdGEoJ21pbi1pbnB1dC1sZW5ndGgnKSxcclxuXHRcdFx0XHRcdFx0XHRwbGFjZWhvbGRlcjogbWUuYXR0cigncGxhY2Vob2xkZXInKSA/PyBtZS5hdHRyKCdkYXRhLXBsYWNlaG9sZGVyJyksXHJcblx0XHRcdFx0XHRcdFx0ZHJvcGRvd25QYXJlbnQ6IG1lLmNsb3Nlc3QoJ2Zvcm0nKS5sZW5ndGggPyBtZS5jbG9zZXN0KCdmb3JtJykgOiBtZS5jbG9zZXN0KCdib2R5JyksXHJcblx0XHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRcdG9wdGlvbnMgPSBtZS5kYXRhKCdvcHRpb25zJykgPz8ge307XHJcblxyXG5cdFx0XHRcdFx0b3B0aW9ucyA9ICQuZXh0ZW5kKGRlZmF1bHRzT3B0aW9ucywgb3B0aW9ucyk7XHJcblx0XHRcdFx0XHRpZiAob3B0aW9ucy51cmwpIHtcclxuXHRcdFx0XHRcdFx0bWUuc2VsZWN0Mih7XHJcblx0XHRcdFx0XHRcdFx0YWpheDoge1xyXG5cdFx0XHRcdFx0XHRcdFx0dXJsOiBvcHRpb25zLnVybCxcclxuXHRcdFx0XHRcdFx0XHRcdHR5cGU6IG9wdGlvbnMubWV0aG9kLFxyXG5cdFx0XHRcdFx0XHRcdFx0ZGF0YVR5cGU6ICdqc29uJyxcclxuXHRcdFx0XHRcdFx0XHRcdGRlbGF5OiBvcHRpb25zLmRlbGF5LFxyXG5cdFx0XHRcdFx0XHRcdFx0Y2FjaGU6IG9wdGlvbnMuY2FjaGUsXHJcblx0XHRcdFx0XHRcdFx0XHRkYXRhOiBmdW5jdGlvbiAocGFyYW1zKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0X3Rva2VuOiBCYXNlVXRpbC5nZXRUb2tlbigpLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGtleXdvcmQ6IHBhcmFtcy50ZXJtLCAvLyBzZWFyY2ggdGVybVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHBhZ2U6IHBhcmFtcy5wYWdlXHJcblx0XHRcdFx0XHRcdFx0XHRcdH07XHJcblx0XHRcdFx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0XHRcdFx0cHJvY2Vzc1Jlc3VsdHM6IGZ1bmN0aW9uIChyZXNwLCBwYXJhbXMpIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0cGFyYW1zLnBhZ2UgPSBwYXJhbXMucGFnZSB8fCAxO1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXN1bHRzOiByZXNwLnJlc3VsdHMgPz8gW10sXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0cGFnaW5hdGlvbjoge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bW9yZTogcmVzcC5tb3JlID8/IGZhbHNlXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdFx0XHR9O1xyXG5cdFx0XHRcdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0XHRcdG1pbmltdW1JbnB1dExlbmd0aDogb3B0aW9ucy5taW5pbXVtSW5wdXRMZW5ndGgsXHJcblx0XHRcdFx0XHRcdFx0cGxhY2Vob2xkZXI6IG9wdGlvbnMucGxhY2Vob2xkZXIsXHJcblx0XHRcdFx0XHRcdFx0ZHJvcGRvd25QYXJlbnQ6IG9wdGlvbnMuZHJvcGRvd25QYXJlbnQsXHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0XHRcdG1lLnNlbGVjdDIoe1xyXG5cdFx0XHRcdFx0XHRcdHBsYWNlaG9sZGVyOiBvcHRpb25zLnBsYWNlaG9sZGVyLFxyXG5cdFx0XHRcdFx0XHRcdGRyb3Bkb3duUGFyZW50OiBvcHRpb25zLmRyb3Bkb3duUGFyZW50LFxyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdGluaXRTZWxlY3RwaWNrZXI6IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0aWYgKCQoJ3NlbGVjdC5iYXNlLXBsdWdpbi0tc2VsZWN0LCBzZWxlY3QuYmFzZS1wbHVnaW4tLXNlbGVjdHBpY2tlcicpLmxlbmd0aCkge1xyXG5cdFx0XHRcdGFsZXJ0KFwiUGxlYXNlIHVzZSBjbGFzcyBiYXNlLXBsdWdpbi0tc2VsZWN0MlwiKTtcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdGluaXREYXRlcGlja2VyOiBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdCQuZm4uZGF0ZXBpY2tlci5kZWZhdWx0cy5mb3JtYXQgPSBcImRkL21tL3l5eXlcIjtcclxuXHRcdFx0JC5mbi5kYXRlcGlja2VyLmRlZmF1bHRzLmxhbmd1YWdlID0gJCgnaHRtbCcpLmF0dHIoJ2xhbmcnKSA/PyBcImVuXCI7XHJcblx0XHRcdGlmICgkKCcuYmFzZS1wbHVnaW4tLWRhdGVwaWNrZXIsIC5iYXNlLXBsdWdpbi0tZGF0ZXBpY2tlci0xJykubGVuZ3RoKSB7XHJcblx0XHRcdFx0JC5lYWNoKCQoJy5iYXNlLXBsdWdpbi0tZGF0ZXBpY2tlciwgLmJhc2UtcGx1Z2luLS1kYXRlcGlja2VyLTEnKSwgZnVuY3Rpb24gKGksIGVsKSB7XHJcblx0XHRcdFx0XHRsZXQgbWUgPSAkKGVsKSxcclxuXHRcdFx0XHRcdFx0ZGVmYXVsdHNPcHRpb25zID0ge1xyXG5cdFx0XHRcdFx0XHRcdGF1dG9jbG9zZSAgICAgOiBtZS5kYXRhKCdhdXRvLWNsb3NlJykgPz8gdHJ1ZSxcclxuXHRcdFx0XHRcdFx0XHR0b2RheUhpZ2hsaWdodDogbWUuZGF0YSgndG9kYXktaGlnaGxpZ2h0JykgPz8gdHJ1ZSxcclxuXHRcdFx0XHRcdFx0XHRvcmllbnRhdGlvbiAgIDogbWUuZGF0YSgnb3JpZW50YXRpb24nKSA/PyAnYXV0bycsXHJcblx0XHRcdFx0XHRcdFx0Zm9ybWF0OiBtZS5kYXRhKCdmb3JtYXQnKSA/PyAnZGQvbW0veXl5eScsXHJcblx0XHRcdFx0XHRcdFx0c3RhcnRWaWV3OiBtZS5kYXRhKCdzdGFydC12aWV3JykgPz8gXCJkYXlzXCIsIFxyXG5cdFx0XHRcdFx0XHRcdG1pblZpZXdNb2RlOiBtZS5kYXRhKCdtaW4tdmlldycpID8/IFwiZGF5c1wiXHJcblx0XHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRcdG9wdGlvbnMgPSBtZS5kYXRhKCdvcHRpb25zJykgPz8ge307XHJcblxyXG5cdFx0XHRcdFx0b3B0aW9ucyA9ICQuZXh0ZW5kKGRlZmF1bHRzT3B0aW9ucywgb3B0aW9ucyk7XHJcblxyXG5cdFx0XHRcdFx0bWUuZGF0ZXBpY2tlcihvcHRpb25zKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoJCgnLmJhc2UtcGx1Z2luLS1kYXRlcGlja2VyLTInKS5sZW5ndGgpIHtcclxuXHRcdFx0XHQkLmVhY2goJCgnLmJhc2UtcGx1Z2luLS1kYXRlcGlja2VyLTInKSwgZnVuY3Rpb24gKGksIGVsKSB7XHJcblx0XHRcdFx0XHRsZXQgbWUgPSAkKGVsKSxcclxuXHRcdFx0XHRcdFx0ZGVmYXVsdHNPcHRpb25zID0ge1xyXG5cdFx0XHRcdFx0XHRcdGF1dG9jbG9zZSAgICAgOiBtZS5kYXRhKCdhdXRvLWNsb3NlJykgPz8gdHJ1ZSxcclxuXHRcdFx0XHRcdFx0XHR0b2RheUhpZ2hsaWdodDogbWUuZGF0YSgndG9kYXktaGlnaGxpZ2h0JykgPz8gdHJ1ZSxcclxuXHRcdFx0XHRcdFx0XHRvcmllbnRhdGlvbiAgIDogbWUuZGF0YSgnb3JpZW50YXRpb24nKSA/PyAnYXV0bycsXHJcblx0XHRcdFx0XHRcdFx0Zm9ybWF0OiBtZS5kYXRhKCdmb3JtYXQnKSA/PyAnbW0veXl5eScsXHJcblx0XHRcdFx0XHRcdFx0c3RhcnRWaWV3OiBtZS5kYXRhKCdzdGFydC12aWV3JykgPz8gXCJtb250aHNcIiwgXHJcblx0XHRcdFx0XHRcdFx0bWluVmlld01vZGU6IG1lLmRhdGEoJ21pbi12aWV3JykgPz8gXCJtb250aHNcIlxyXG5cdFx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0XHRvcHRpb25zID0gbWUuZGF0YSgnb3B0aW9ucycpID8/IHt9O1xyXG5cclxuXHRcdFx0XHRcdG9wdGlvbnMgPSAkLmV4dGVuZChkZWZhdWx0c09wdGlvbnMsIG9wdGlvbnMpO1xyXG5cclxuXHRcdFx0XHRcdG1lLmRhdGVwaWNrZXIob3B0aW9ucyk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdFx0aWYgKCQoJy5iYXNlLXBsdWdpbi0tZGF0ZXBpY2tlci0zJykubGVuZ3RoKSB7XHJcblx0XHRcdFx0JC5lYWNoKCQoJy5iYXNlLXBsdWdpbi0tZGF0ZXBpY2tlci0zJyksIGZ1bmN0aW9uIChpLCBlbCkge1xyXG5cdFx0XHRcdFx0bGV0IG1lID0gJChlbCksXHJcblx0XHRcdFx0XHRcdGRlZmF1bHRzT3B0aW9ucyA9IHtcclxuXHRcdFx0XHRcdFx0XHRhdXRvY2xvc2UgICAgIDogbWUuZGF0YSgnYXV0by1jbG9zZScpID8/IHRydWUsXHJcblx0XHRcdFx0XHRcdFx0dG9kYXlIaWdobGlnaHQ6IG1lLmRhdGEoJ3RvZGF5LWhpZ2hsaWdodCcpID8/IHRydWUsXHJcblx0XHRcdFx0XHRcdFx0b3JpZW50YXRpb24gICA6IG1lLmRhdGEoJ29yaWVudGF0aW9uJykgPz8gJ2F1dG8nLFxyXG5cdFx0XHRcdFx0XHRcdGZvcm1hdDogbWUuZGF0YSgnZm9ybWF0JykgPz8gJ3l5eXknLFxyXG5cdFx0XHRcdFx0XHRcdHN0YXJ0VmlldzogbWUuZGF0YSgnc3RhcnQtdmlldycpID8/IFwieWVhcnNcIiwgXHJcblx0XHRcdFx0XHRcdFx0bWluVmlld01vZGU6IG1lLmRhdGEoJ21pbi12aWV3JykgPz8gXCJ5ZWFyc1wiXHJcblx0XHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRcdG9wdGlvbnMgPSBtZS5kYXRhKCdvcHRpb25zJykgPz8ge307XHJcblxyXG5cdFx0XHRcdFx0b3B0aW9ucyA9ICQuZXh0ZW5kKGRlZmF1bHRzT3B0aW9ucywgb3B0aW9ucyk7XHJcblxyXG5cdFx0XHRcdFx0bWUuZGF0ZXBpY2tlcihvcHRpb25zKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdGluaXRUaW1lcGlja2VyOiBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdGlmICgkKCcuYmFzZS1wbHVnaW4tLXRpbWVwaWNrZXInKS5sZW5ndGgpIHtcclxuXHRcdFx0XHQkLmVhY2goJCgnLmJhc2UtcGx1Z2luLS10aW1lcGlja2VyJyksIGZ1bmN0aW9uIChpLCBlbCkge1xyXG5cdFx0XHRcdFx0bGV0IG1lID0gJChlbCksXHJcblx0XHRcdFx0XHRcdGRlZmF1bHRzT3B0aW9ucyA9IHtcclxuXHRcdFx0XHRcdFx0XHRtaW51dGVTdGVwICA6IG1lLmRhdGEoJ21pbnV0ZS1zdGVwJykgPz8gMixcclxuXHRcdFx0XHRcdFx0XHRkZWZhdWx0VGltZSA6IG1lLmRhdGEoJ2RlZmF1bHQtdGltZScpID8/ICcwMDowMCcsXHJcblx0XHRcdFx0XHRcdFx0c2hvd1NlY29uZHMgOiBtZS5kYXRhKCdzaG93LXNlY29uZHMnKSA/PyBmYWxzZSxcclxuXHRcdFx0XHRcdFx0XHRzaG93TWVyaWRpYW46IG1lLmRhdGEoJ3Nob3ctbWVyaWRpYW4nKSA/PyBmYWxzZSxcclxuXHRcdFx0XHRcdFx0XHRzbmFwVG9TdGVwICA6IG1lLmRhdGEoJ3NuYXAtdG8tc3RlcCcpID8/IHRydWUsXHJcblx0XHRcdFx0XHRcdFx0b3JpZW50YXRpb24gOiBtZS5kYXRhKCdvcmllbnRhdGlvbicpID8/ICdhdXRvJ1xyXG5cdFx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0XHRvcHRpb25zID0gbWUuZGF0YSgnb3B0aW9ucycpID8/IHt9O1xyXG5cclxuXHRcdFx0XHRcdG9wdGlvbnMgPSAkLmV4dGVuZChkZWZhdWx0c09wdGlvbnMsIG9wdGlvbnMpO1xyXG5cclxuXHRcdFx0XHRcdG1lLnRpbWVwaWNrZXIob3B0aW9ucyk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHRpbml0U3VtbWVybm90ZTogZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRpZiAoJCgnLmJhc2UtcGx1Z2luLS1zdW1tZXJub3RlLXJlYWRvbmx5JykubGVuZ3RoKSB7XHJcblx0XHRcdFx0JCgnLmJhc2UtcGx1Z2luLS1zdW1tZXJub3RlLXJlYWRvbmx5JykuYXBwZW5kKGBcclxuXHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJub3RlLXN0YXR1c2JhclwiIHJvbGU9XCJzdGF0dXNcIj5cclxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzcz1cIm5vdGUtcmVzaXplYmFyXCIgYXJpYS1sYWJlbD1cIlJlc2l6ZVwiPlxyXG5cdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJub3RlLWljb24tYmFyXCI+PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0PGRpdiBjbGFzcz1cIm5vdGUtaWNvbi1iYXJcIj48L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwibm90ZS1pY29uLWJhclwiPjwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdDwvZGl2PmApO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmICgkKCcuYmFzZS1wbHVnaW4tLXN1bW1lcm5vdGUsIC5iYXNlLXBsdWdpbi0tc3VtbWVybm90ZS0xJykubGVuZ3RoKSB7XHJcblx0XHRcdFx0JC5lYWNoKCQoJy5iYXNlLXBsdWdpbi0tc3VtbWVybm90ZSwgLmJhc2UtcGx1Z2luLS1zdW1tZXJub3RlLTEnKSwgZnVuY3Rpb24gKGksIGVsKSB7XHJcblx0XHRcdFx0XHRsZXQgbWUgPSAkKGVsKSxcclxuXHRcdFx0XHRcdFx0ZGVmYXVsdHNPcHRpb25zID0ge1xyXG5cdFx0XHRcdFx0XHRcdGhlaWdodDogbWUuZGF0YSgnaGVpZ2h0JykgPz8gMTAwLFxyXG5cdFx0XHRcdFx0XHRcdHRvb2xiYXI6IG1lLmRhdGEoJ3Rvb2xiYXInKSAhPSB1bmRlZmluZWQgPyBtZS5kYXRhKCd0b29sYmFyJykgOiBbXHJcblx0XHRcdFx0ICAgICAgICAgICAgICAgIFsnZm9udCcsIFsnYm9sZCcsICdpdGFsaWMnLCAndW5kZXJsaW5lJ11dLFxyXG5cdFx0XHRcdCAgICAgICAgICAgICAgICBbJ3BhcmEnLCBbJ3VsJywgJ29sJywgJ3BhcmFncmFwaCddXSxcclxuXHRcdFx0XHQgICAgICAgICAgICAgICAgWyd0YWJsZScsIFsndGFibGUnXV0sXHJcblx0XHRcdFx0ICAgICAgICAgICAgICAgIFsnaW5zZXJ0JywgWydsaW5rJywgJ3BpY3R1cmUnXV0sXHJcblx0XHRcdFx0ICAgICAgICAgICAgXSxcclxuXHRcdFx0XHQgICAgICAgICAgICBjYWxsYmFja3M6IHtcclxuXHRcdFx0XHRcdFx0XHRcdC8vIGNhbGxiYWNrIGZvciBwYXN0aW5nIHRleHQgb25seSAobm8gZm9ybWF0dGluZylcclxuXHRcdFx0XHRcdFx0XHRcdC8vIG9uUGFzdGU6IGZ1bmN0aW9uIChlKSB7XHJcblx0XHRcdFx0XHRcdFx0XHQvLyBcdHZhciBidWZmZXJUZXh0ID0gKChlLm9yaWdpbmFsRXZlbnQgfHwgZSkuY2xpcGJvYXJkRGF0YSB8fCB3aW5kb3cuY2xpcGJvYXJkRGF0YSkuZ2V0RGF0YSgnVGV4dCcpO1xyXG5cdFx0XHRcdFx0XHRcdFx0Ly8gXHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRcdFx0XHRcdFx0XHQvLyBcdGRvY3VtZW50LmV4ZWNDb21tYW5kKCdpbnNlcnRIdG1sJywgZmFsc2UsIGJ1ZmZlclRleHQpO1xyXG5cdFx0XHRcdFx0XHRcdFx0Ly8gfVxyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdFx0b3B0aW9ucyA9IG1lLmRhdGEoJ29wdGlvbnMnKSA/PyB7fTtcclxuXHJcblx0XHRcdFx0XHRpZiAob3B0aW9ucy50b29sYmFyTWVyZ2UgIT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdFx0XHRcdG9wdGlvbnMudG9vbGJhciA9IGRlZmF1bHRzT3B0aW9ucy50b29sYmFyLmNvbmNhdChvcHRpb25zLnRvb2xiYXJNZXJnZSk7XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0b3B0aW9ucyA9ICQuZXh0ZW5kKGRlZmF1bHRzT3B0aW9ucywgb3B0aW9ucyk7XHJcblx0XHRcdFx0XHRtZS5zdW1tZXJub3RlKG9wdGlvbnMpO1xyXG5cclxuXHRcdFx0XHRcdGlmIChtZS5wcm9wKCdkaXNhYmxlZCcpKSB7XHJcblx0XHRcdFx0XHRcdG1lLnN1bW1lcm5vdGUoJ2Rlc3Ryb3knKTtcclxuXHRcdFx0XHRcdFx0bWUuc3VtbWVybm90ZSh7dG9vbGJhcjogZmFsc2V9KTtcclxuXHRcdFx0XHRcdFx0bWUucGFyZW50KCkuZmluZCgnLm5vdGUtZWRpdGFibGUnKS5hdHRyKCdjb250ZW50ZWRpdGFibGUnLCBmYWxzZSk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdFx0aWYgKCQoJy5iYXNlLXBsdWdpbi0tc3VtbWVybm90ZS0yJykubGVuZ3RoKSB7XHJcblx0XHRcdFx0JC5lYWNoKCQoJy5iYXNlLXBsdWdpbi0tc3VtbWVybm90ZS0yJyksIGZ1bmN0aW9uIChpLCBlbCkge1xyXG5cdFx0XHRcdFx0bGV0IG1lID0gJChlbCksXHJcblx0XHRcdFx0XHRcdGRlZmF1bHRzT3B0aW9ucyA9IHtcclxuXHRcdFx0XHRcdFx0XHRoZWlnaHQgIDogbWUuZGF0YSgnaGVpZ2h0JykgPz8gMzAwLFxyXG5cdFx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0XHRvcHRpb25zID0gbWUuZGF0YSgnb3B0aW9ucycpID8/IHt9O1xyXG5cclxuXHRcdFx0XHRcdG9wdGlvbnMgPSAkLmV4dGVuZChkZWZhdWx0c09wdGlvbnMsIG9wdGlvbnMpO1xyXG5cdFx0XHRcdFx0bWUuc3VtbWVybm90ZShvcHRpb25zKTtcclxuXHJcblx0XHRcdFx0XHRpZiAobWUucHJvcCgnZGlzYWJsZWQnKSkge1xyXG5cdFx0XHRcdFx0XHRtZS5zdW1tZXJub3RlKCdkZXN0cm95Jyk7XHJcblx0XHRcdFx0XHRcdG1lLnN1bW1lcm5vdGUoe3Rvb2xiYXI6IGZhbHNlfSk7XHJcblx0XHRcdFx0XHRcdG1lLnBhcmVudCgpLmZpbmQoJy5ub3RlLWVkaXRhYmxlJykuYXR0cignY29udGVudGVkaXRhYmxlJywgZmFsc2UpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0aW5pdElucHV0TWFzazogZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRpZiAoJCgnLmJhc2UtcGx1Z2luLS1pbnB1dG1hc2tfY3VycmVuY3knKS5sZW5ndGgpIHtcclxuXHRcdFx0XHQkKFwiLmJhc2UtcGx1Z2luLS1pbnB1dG1hc2tfY3VycmVuY3lcIikuaW5wdXRtYXNrKCdjdXJyZW5jeScsIHtcclxuXHRcdFx0XHRcdGFsaWFzOiBcIm51bWVyaWNcIixcclxuXHRcdFx0XHRcdHByZWZpeDogXCJcIixcclxuXHRcdFx0XHRcdGdyb3VwU2VwYXJhdG9yOiBcIixcIixcclxuXHRcdFx0XHRcdHJhZGl4UG9pbnQ6IFwiLlwiLFxyXG5cdFx0XHRcdFx0ZGlnaXRzOiAwLFxyXG5cdFx0XHRcdFx0ZGlnaXRzT3B0aW9uYWw6ICExLFxyXG5cdFx0XHRcdFx0YWxsb3dNaW51czogITEsXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmICgkKCcuYmFzZS1wbHVnaW4tLWlucHV0bWFza19pbnQnKS5sZW5ndGgpIHtcclxuXHRcdFx0XHQkKFwiLmJhc2UtcGx1Z2luLS1pbnB1dG1hc2tfaW50XCIpLmlucHV0bWFzayh7XHJcblx0XHRcdFx0XHRcIm1hc2tcIjogXCI5XCIsXHJcblx0XHRcdFx0XHRcInJlcGVhdFwiOiAxMSxcclxuXHRcdFx0XHRcdFwiZ3JlZWR5XCI6IGZhbHNlXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdFx0aWYgKCQoJy5iYXNlLXBsdWdpbi0taW5wdXRtYXNrX2ludF80JykubGVuZ3RoKSB7XHJcblx0XHRcdFx0JChcIi5iYXNlLXBsdWdpbi0taW5wdXRtYXNrX2ludF80XCIpLmlucHV0bWFzayh7XHJcblx0XHRcdFx0XHRcIm1hc2tcIjogXCI5XCIsXHJcblx0XHRcdFx0XHRcInJlcGVhdFwiOiA0LFxyXG5cdFx0XHRcdFx0XCJncmVlZHlcIjogZmFsc2VcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoJCgnLmJhc2UtcGx1Z2luLS1pbnB1dG1hc2tfaW50XzInKS5sZW5ndGgpIHtcclxuXHRcdFx0XHQkKFwiLmJhc2UtcGx1Z2luLS1pbnB1dG1hc2tfaW50XzJcIikuaW5wdXRtYXNrKHtcclxuXHRcdFx0XHRcdFwibWFza1wiOiBcIjlcIixcclxuXHRcdFx0XHRcdFwicmVwZWF0XCI6IDQsXHJcblx0XHRcdFx0XHRcImdyZWVkeVwiOiBmYWxzZVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmICgkKCcuYmFzZS1wbHVnaW4tLWlucHV0bWFza19kZWNfMicpLmxlbmd0aCkge1xyXG5cdFx0XHRcdCQoXCIuYmFzZS1wbHVnaW4tLWlucHV0bWFza19kZWNfMlwiKS5pbnB1dG1hc2soJ2RlY2ltYWwnLCB7XHJcblx0XHRcdFx0XHRcImRpZ2l0c1wiOiAyLFxyXG5cdFx0XHRcdFx0XCJyaWdodEFsaWduXCI6IGZhbHNlLFxyXG5cdFx0XHRcdFx0XCJyZXBlYXRcIjogNCxcclxuXHRcdFx0XHRcdFwiZ3JlZWR5XCI6IGZhbHNlXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdFx0aWYgKCQoJy5iYXNlLXBsdWdpbi0taW5wdXRtYXNrX3Bob25lJykubGVuZ3RoKSB7XHJcblx0XHRcdFx0JChcIi5iYXNlLXBsdWdpbi0taW5wdXRtYXNrX3Bob25lXCIpLmlucHV0bWFzayh7XHJcblx0XHRcdFx0XHRcIm1hc2tcIjogXCI5XCIsXHJcblx0XHRcdFx0XHRcInJlcGVhdFwiOiAxNSxcclxuXHRcdFx0XHRcdFwiZ3JlZWR5XCI6IGZhbHNlXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHRpbml0VG91Y2hTcGluOiBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdGlmICgkKCcuYmFzZS1wbHVnaW4tLXRvdWNoc3Bpbl9pbnQnKS5sZW5ndGgpIHtcclxuXHRcdFx0XHQkKCcuYmFzZS1wbHVnaW4tLXRvdWNoc3Bpbl9pbnQnKS5Ub3VjaFNwaW4oe1xyXG5cdFx0XHRcdFx0YnV0dG9uZG93bl9jbGFzczogJ2J0biBidG4tc2Vjb25kYXJ5JyxcclxuXHRcdFx0XHRcdGJ1dHRvbnVwX2NsYXNzOiAnYnRuIGJ0bi1zZWNvbmRhcnknLFxyXG5cdFx0XHRcdFx0dmVydGljYWxidXR0b25zOiB0cnVlLFxyXG5cdFx0XHRcdFx0dmVydGljYWx1cDogJzxpIGNsYXNzPVwia2kga2ktcGx1c1wiPjwvaT4nLFxyXG5cdFx0XHRcdFx0dmVydGljYWxkb3duOiAnPGkgY2xhc3M9XCJraSBraS1taW51c1wiPjwvaT4nLFxyXG5cclxuXHRcdFx0XHRcdG1pbjogMCxcclxuXHRcdFx0XHRcdG1heDogOTk5OTk5OTk5OSxcclxuXHRcdFx0XHRcdHN0ZXA6IDEsXHJcblx0XHRcdFx0XHRkZWNpbWFsczogMCxcclxuXHRcdFx0XHRcdGJvb3N0YXQ6IDUsXHJcblx0XHRcdFx0XHRtYXhib29zdGVkc3RlcDogMTAsXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmICgkKCcuYmFzZS1wbHVnaW4tLXRvdWNoc3Bpbl9kZWMnKS5sZW5ndGgpIHtcclxuXHRcdFx0XHQkKCcuYmFzZS1wbHVnaW4tLXRvdWNoc3Bpbl9kZWMnKS5Ub3VjaFNwaW4oe1xyXG5cdFx0XHRcdFx0YnV0dG9uZG93bl9jbGFzczogJ2J0biBidG4tc2Vjb25kYXJ5JyxcclxuXHRcdFx0XHRcdGJ1dHRvbnVwX2NsYXNzOiAnYnRuIGJ0bi1zZWNvbmRhcnknLFxyXG5cdFx0XHRcdFx0dmVydGljYWxidXR0b25zOiB0cnVlLFxyXG5cdFx0XHRcdFx0dmVydGljYWx1cDogJzxpIGNsYXNzPVwia2kga2ktcGx1c1wiPjwvaT4nLFxyXG5cdFx0XHRcdFx0dmVydGljYWxkb3duOiAnPGkgY2xhc3M9XCJraSBraS1taW51c1wiPjwvaT4nLFxyXG5cclxuXHRcdFx0XHRcdG1pbjogMCxcclxuXHRcdFx0XHRcdG1heDogOTk5OTk5OTk5OSxcclxuXHRcdFx0XHRcdHN0ZXA6IDAuMDEsXHJcblx0XHRcdFx0XHRkZWNpbWFsczogMixcclxuXHRcdFx0XHRcdGJvb3N0YXQ6IDUsXHJcblx0XHRcdFx0XHRtYXhib29zdGVkc3RlcDogMTAsXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn0oKTtcclxuXHJcbi8vIHdlYnBhY2sgc3VwcG9ydFxyXG5pZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBCYXNlUGx1Z2luO1xyXG59Il0sIm5hbWVzIjpbIkJhc2VQbHVnaW4iLCJpbml0IiwiaW5pdFRvb2x0aXBQb3BvdmVyIiwiaW5pdFNlbGVjdDIiLCJpbml0U2VsZWN0cGlja2VyIiwiaW5pdERhdGVwaWNrZXIiLCJpbml0VGltZXBpY2tlciIsImluaXRTdW1tZXJub3RlIiwiaW5pdElucHV0TWFzayIsImluaXRUb3VjaFNwaW4iLCIkIiwicmVtb3ZlIiwibGVuZ3RoIiwiZWFjaCIsImkiLCJlbCIsInRvb2x0aXAiLCJwb3BvdmVyIiwic2VsZWN0MiIsIm1lIiwiZGVmYXVsdHNPcHRpb25zIiwicGxhY2Vob2xkZXIiLCJhdHRyIiwiZHJvcGRvd25QYXJlbnQiLCJjbG9zZXN0Iiwib3B0aW9ucyIsImRhdGEiLCJleHRlbmQiLCJ1cmwiLCJtZXRob2QiLCJkZWxheSIsImNhY2hlIiwibWluaW11bUlucHV0TGVuZ3RoIiwiYWpheCIsInR5cGUiLCJkYXRhVHlwZSIsInBhcmFtcyIsIl90b2tlbiIsIkJhc2VVdGlsIiwiZ2V0VG9rZW4iLCJrZXl3b3JkIiwidGVybSIsInBhZ2UiLCJwcm9jZXNzUmVzdWx0cyIsInJlc3AiLCJyZXN1bHRzIiwicGFnaW5hdGlvbiIsIm1vcmUiLCJhbGVydCIsImZuIiwiZGF0ZXBpY2tlciIsImRlZmF1bHRzIiwiZm9ybWF0IiwibGFuZ3VhZ2UiLCJhdXRvY2xvc2UiLCJ0b2RheUhpZ2hsaWdodCIsIm9yaWVudGF0aW9uIiwic3RhcnRWaWV3IiwibWluVmlld01vZGUiLCJtaW51dGVTdGVwIiwiZGVmYXVsdFRpbWUiLCJzaG93U2Vjb25kcyIsInNob3dNZXJpZGlhbiIsInNuYXBUb1N0ZXAiLCJ0aW1lcGlja2VyIiwiYXBwZW5kIiwiaGVpZ2h0IiwidG9vbGJhciIsInVuZGVmaW5lZCIsImNhbGxiYWNrcyIsInRvb2xiYXJNZXJnZSIsImNvbmNhdCIsInN1bW1lcm5vdGUiLCJwcm9wIiwicGFyZW50IiwiZmluZCIsImlucHV0bWFzayIsImFsaWFzIiwicHJlZml4IiwiZ3JvdXBTZXBhcmF0b3IiLCJyYWRpeFBvaW50IiwiZGlnaXRzIiwiZGlnaXRzT3B0aW9uYWwiLCJhbGxvd01pbnVzIiwiVG91Y2hTcGluIiwiYnV0dG9uZG93bl9jbGFzcyIsImJ1dHRvbnVwX2NsYXNzIiwidmVydGljYWxidXR0b25zIiwidmVydGljYWx1cCIsInZlcnRpY2FsZG93biIsIm1pbiIsIm1heCIsInN0ZXAiLCJkZWNpbWFscyIsImJvb3N0YXQiLCJtYXhib29zdGVkc3RlcCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base/BasePlugin.js\n");

/***/ }),

/***/ "./resources/assets/src/js/base/BaseUtil.js":
/*!**************************************************!*\
  !*** ./resources/assets/src/js/base/BaseUtil.js ***!
  \**************************************************/
/***/ ((module) => {

eval("var BaseUtil = function () {\n  return {\n    init: function init() {\n      this.refreshComponent();\n      this.handleBaseToken();\n      this.handleOnPopstate();\n      this.menuActivation();\n    },\n    refreshComponent: function refreshComponent() {\n      this.bodyClasses();\n      this.sidebarMini();\n      this.menuActivation();\n    },\n    isDev: function isDev() {\n      return $('meta[name=\"debug\"]').attr('content') == 1 ? true : false;\n    },\n    checkToken: function checkToken() {\n      return window.BaseToken >= 1667235600000;\n    },\n    getUrl: function getUrl() {\n      var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return decodeURIComponent($('meta[name=\"base-url\"]').attr('content') + '/' + url);\n    },\n    getToken: function getToken() {\n      return $('meta[name=\"csrf-token\"]').attr('content');\n    },\n    getLang: function getLang() {\n      return $('html').attr('lang');\n    },\n    redirect: function redirect(url) {\n      window.location = url;\n    },\n    bodyClasses: function bodyClasses() {\n      var body = $('body');\n\n      if (body.find('.subheader').length) {\n        if (!body.hasClass('subheader-enabled')) {\n          body.addClass('subheader-enabled subheader-fixed');\n        }\n      } else {\n        body.removeClass('subheader-enabled subheader-fixed');\n      }\n    },\n    initScroll: function initScroll() {\n      $('[data-scroll=\"true\"]').each(function () {\n        var el = $(this);\n        KTUtil.scrollInit(this, {\n          mobileNativeScroll: true,\n          handleWindowResize: true,\n          rememberPosition: el.data('remember-position') == 'true' ? true : false,\n          height: function height() {\n            if (KTUtil.isBreakpointDown('lg') && el.data('mobile-height')) {\n              return el.data('mobile-height');\n            } else {\n              return el.data('height');\n            }\n          }\n        });\n      });\n    },\n    menuActivation: function menuActivation() {\n      var pageName = $('#content-page').attr('data-module');\n      var menuActive = '.aside .menu-link[data-name=\"' + pageName + '\"]';\n\n      if ($(menuActive).length === 0) {\n        menuActive = '.aside .menu-link[href=\"' + window.location.pathname + '\"]';\n      }\n\n      if ($(menuActive).length) {\n        if ($('.aside .custom-menu').length) {\n          $('.aside ul, .aside li').removeClass('active');\n          $(menuActive).parents('ul, li').addClass('active');\n          $(menuActive).closest('li').find('ul').addClass('active');\n          $('.aside li:not(.active)').removeClass('expand').addClass('closed');\n          $('.aside ul:not(.active)').removeClass('expand').addClass('closed').hide();\n        } else {\n          $('.aside .menu-item').removeClass('menu-item-active');\n          $('.aside .menu-item-submenu').removeClass('menu-item-open');\n          $(menuActive).last().addClass('active');\n          $(menuActive).last().parents('.menu-item').addClass('menu-item-active');\n          $(menuActive).last().parents('.menu-item-submenu').addClass('menu-item-open');\n        }\n      }\n    },\n    sidebarMini: function sidebarMini() {\n      if ($('.aside').length) {\n        if ($('#content-page').data('sidebar-mini')) {\n          $('body').addClass('aside-minimize');\n          KTLayoutAsideToggle.getToggle().toggleOn();\n        } else {\n          $('body').removeClass('aside-minimize');\n          KTLayoutAsideToggle.getToggle().toggleOff();\n        }\n      }\n    },\n    userNotification: function userNotification() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return function (options) {\n        var wrapper = $('.base-notification-wrapper');\n\n        if (wrapper.length) {\n          var defaultOptions = {\n            url: wrapper.data('url'),\n            type: 'POST',\n            data: {\n              _token: BaseUtil.getToken()\n            }\n          },\n              options = $.extend(defaultOptions, options);\n          $.ajax({\n            url: options.url,\n            type: options.type,\n            data: options.data,\n            success: function success(resp) {\n              wrapper.html(resp);\n              wrapper.find('[data-scroll=\"true\"]').each(function () {\n                var el = $(this);\n                KTUtil.scrollInit(this, {\n                  mobileNativeScroll: true,\n                  handleWindowResize: true,\n                  rememberPosition: el.data('remember-position') == 'true' ? true : false,\n                  height: function height() {\n                    if (KTUtil.isBreakpointDown('lg') && el.data('mobile-height')) {\n                      return el.data('mobile-height');\n                    } else {\n                      return el.data('height');\n                    }\n                  }\n                });\n              });\n              var el_items = wrapper.find('.user-notification-items').first();\n\n              if (el_items.length && parseInt(el_items.data('count')) > 0) {\n                var count = parseInt(el_items.data('count'));\n                wrapper.closest('.dropdown').find('.user-notification-badge span').html(count);\n                wrapper.closest('.dropdown').find('.user-notification-header span').html(count + ' New');\n                wrapper.closest('.dropdown').find('.pulse-ring').removeClass('hide');\n                wrapper.closest('.dropdown').find('.user-notification-badge').removeClass('hide');\n                wrapper.closest('.dropdown').find('.user-notification-header').removeClass('hide');\n              } else {\n                wrapper.closest('.dropdown').find('.pulse-ring').addClass('hide');\n                wrapper.closest('.dropdown').find('.user-notification-badge').addClass('hide');\n                wrapper.closest('.dropdown').find('.user-notification-header').addClass('hide');\n              }\n            }\n          });\n        }\n      }(options);\n    },\n    handleBaseToken: function handleBaseToken() {\n      if (BaseUtil.checkToken()) {}\n    },\n    handleOnPopstate: function handleOnPopstate() {\n      window.addEventListener('popstate', function (e) {\n        window.location.reload();\n      });\n    },\n    handleServerSendEvent: function handleServerSendEvent() {\n      if (typeof EventSource !== \"undefined\") {\n        // withCredentials=true: pass the cross-domain cookies to server-side\n        var source = new EventSource('/globals/sse', {\n          withCredentials: false\n        });\n        source.addEventListener('news', function (event) {\n          var data = JSON.parse(event.data);\n        }, false);\n      }\n    },\n    documentEvent: function documentEvent() {\n      // Notification\n      $(document).on('show.bs.dropdown', '.dropdown.dropdown-notification', function () {\n        BaseUtil.userNotification();\n      });\n    }\n  };\n}(); // webpack support\n\n\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = BaseUtil;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/src/js/base/BaseUtil.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/************************************************************************/
/******/
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/src/js/base.js");
/******/
/******/ })()
;
